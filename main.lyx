#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass amsart
\begin_preamble
\hypersetup{colorlinks=true,citecolor=red}
\end_preamble
\use_default_options true
\begin_modules
theorems-ams
eqs-within-sections
figs-within-sections
algolyx
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_title "Graph Isomorphism"
\pdf_author "Nils Wisiol"
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks true
\pdf_pdfborder true
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Definition of algebra operators
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\Sym}{\operatorname{Sym}}
{\mathrm{Sym\text{ }}}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\Aut}{\operatorname{Aut}}
{\mathrm{Aut\text{ }}}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\Ker}{\operatorname{Ker}}
{\mathrm{Ker}}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\Img}{\operatorname{Im}}
{\mathrm{Im}}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Definition of complexity classes
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\complexityclass}[1]{\mathrm{#1}}
{\mathrm{#1}}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\P}{\complexityclass P}
{\complexityclass P}
\end_inset


\begin_inset FormulaMacro
\newcommand{\NP}{\complexityclass{NP}}
{\complexityclass{NP}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\coNP}{\complexityclass{coNP}}
{\complexityclass{coNP}}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\GI}{\complexityclass{GI}}
{\complexityclass{GI}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\GNI}{\complexityclass{GNI}}
{\complexityclass{GNI}}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\AM}{\complexityclass{AM}}
{\complexityclass{AM}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\coAM}{\complexityclass{coAM}}
{\complexityclass{coAM}}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Additional statements for algorithms 
\begin_inset Newline newline
\end_inset

(Note: changes to lyxalgo.sty are needed every time a new statement is added.)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
newcommand{
\backslash
keyreturn}{return}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{titlepage}
\end_layout

\begin_layout Plain Layout

  Julius-Maximilians-Universität Würzburg
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

  Institut für Mathematik
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

  Lehrstuhl für Geometrie
\end_layout

\begin_layout Plain Layout

  
\backslash
vspace{3cm}      
\end_layout

\begin_layout Plain Layout

  
\backslash
begin{center}
\end_layout

\begin_layout Plain Layout

     
\backslash
LARGE
\backslash
textbf{Bachelor Thesis}
\end_layout

\begin_layout Plain Layout

  
\backslash
end{center}
\end_layout

\begin_layout Plain Layout

  
\backslash
vspace{0cm}
\end_layout

\begin_layout Plain Layout

  
\backslash
begin{center}
\end_layout

\begin_layout Plain Layout

    
\backslash
huge
\backslash
textbf{Graph Isomorphism}
\end_layout

\begin_layout Plain Layout

  
\backslash
end{center}
\end_layout

\begin_layout Plain Layout

  
\backslash
vspace{1cm}
\end_layout

\begin_layout Plain Layout

  
\backslash
begin{center}
\end_layout

\begin_layout Plain Layout

    
\backslash
Large Nils Wisiol
\end_layout

\begin_layout Plain Layout

  
\backslash
end{center}
\end_layout

\begin_layout Plain Layout

  
\backslash
vspace{0cm}
\end_layout

\begin_layout Plain Layout

  
\backslash
begin{center}
\end_layout

\begin_layout Plain Layout

    
\backslash
Large submitted on May 9th, 2015
\end_layout

\begin_layout Plain Layout

  
\backslash
end{center}
\end_layout

\begin_layout Plain Layout

  
\backslash
begin{figure}[ht]
\end_layout

\begin_layout Plain Layout

    
\backslash
begin{center}
\end_layout

\begin_layout Plain Layout

      
\backslash
includegraphics[height=8cm]{siegel.pdf}
\end_layout

\begin_layout Plain Layout

    
\backslash
end{center}
\end_layout

\begin_layout Plain Layout

  
\backslash
end{figure}
\end_layout

\begin_layout Plain Layout

  
\backslash
begin{center}
\end_layout

\begin_layout Plain Layout

    
\backslash
Large supervisor:
\backslash

\backslash
Dr.
 Nils Rosehr
\end_layout

\begin_layout Plain Layout

  
\backslash
end{center}
\end_layout

\begin_layout Plain Layout


\backslash
end{titlepage} 
\end_layout

\begin_layout Plain Layout


\backslash
title{}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Abstract
Let 
\begin_inset Formula $G_{1}=(V_{1},E_{1})$
\end_inset

 and 
\begin_inset Formula $G_{2}=(V_{2},E_{2})$
\end_inset

 be graphs.
 
\begin_inset Formula $G_{1}$
\end_inset

 and 
\begin_inset Formula $G_{2}$
\end_inset

 are called 
\emph on
isomorphic
\emph default
, if there is a bijection 
\begin_inset Formula $\sigma:V_{1}\to V_{2}$
\end_inset

 that preserves the basic structure of the graph.
 More formally, 
\begin_inset Formula $\sigma$
\end_inset

 is called an isomorphism, if for all 
\begin_inset Formula $v,w\in V_{1}$
\end_inset

 it holds that 
\begin_inset Formula $(v,w)\in E_{1}\iff(\sigma(v),\sigma(w))\in E_{2}$
\end_inset

.
\end_layout

\begin_layout Abstract
While in general it is not known whether there is a polynomial time algorithm
 to decide whether two given graphs are isomorphic, there are polynomial-time
 algorithms for certain subsets of graphs, including but not limited to
 planar graphs and graphs with bounded valence.
\end_layout

\begin_layout Abstract
In this thesis, we will give a brief introduction on the Graph Isomorphism
 Problem and its relations to complexity theory.
 We show that permutation groups can, despite their large sizes, stored
 in digital computers in a succinct way.
 This raises questions about our ability to answer important questions about
 these permutation groups with algorithms in polynomial time.
 We present some polynomial-time algorithms that can determine basic fact
 about succinctly stored groups.
 After this, we proof that graphs with valence bounded by 3 can be checked
 for isomorphism in polynomial time, following the proof given by Luks 
\begin_inset CommandInset citation
LatexCommand cite
key "journals/jcss/Luks82"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Abstract

\lang ngerman
Seien 
\begin_inset Formula $G_{1}=(V_{1},E_{1})$
\end_inset

 und 
\begin_inset Formula $G_{2}=(V_{2},E_{2})$
\end_inset

 Graphen.
 
\begin_inset Formula $G_{1}$
\end_inset

 und 
\begin_inset Formula $G_{2}$
\end_inset

 sind 
\emph on
isomorph
\emph default
, falls es eine Bijektion 
\begin_inset Formula $\sigma:V_{1}\to V_{2}$
\end_inset

 gibt, die die Struktur des Graphen erhält.
 Genauer gesagt ist 
\begin_inset Formula $\sigma$
\end_inset

 genau dann ein Isomorphismus, wenn für alle 
\begin_inset Formula $v,w\in V_{1}$
\end_inset

 gilt dass 
\begin_inset Formula $(v,w)\in E_{1}\iff(\sigma(v),\sigma(w))\in E_{2}$
\end_inset

.
\end_layout

\begin_layout Abstract

\lang ngerman
Es ist unbekannt, ob es einen Polynomialzeitalgorithmus gibt, der Isomorphie
 für zwei beliebige Graphen feststellen kann.
 Wir kennen jedoch Polynomialzeitalgorithmen für bestimmte Klassen von Graphen,
 beispielsweise planare Graphen und Graphen mit beschränkter Valenz.
\end_layout

\begin_layout Abstract

\lang ngerman
In der vorliegenden Arbeit geben wir eine kurze Einführung in das Graphen-Isomor
phie-Problem und seine Verbindung zur Komplexitätstheorie.
 Wir zeigen dass Permutationsgruppen, obwohl von großer Ordnung, in kurzer
 Darstellung in digitalen Computern gespeichert werden können.
 Das wirft die Frage auf, ob wir wichtige Eigenschaften dieser Gruppen in
 Polynomialzeit algorithmisch festgestellt werden können.
 Wir führen einige Algorithmen auf, die einige dieser Fragen in Polynomialzeit
 beantworten können.
 Anschließend zeigen wir, basierend auf einem Beweis von Luks 
\begin_inset CommandInset citation
LatexCommand cite
key "journals/jcss/Luks82"

\end_inset

, dass Graphen, deren Valenz durch 3 beschränkt ist, in Polynomialzeit auf
 Isomorphie überprüft werden können.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
Given two graphs 
\begin_inset Formula $G_{1}=(V_{1},E_{1})$
\end_inset

 and 
\begin_inset Formula $G_{2}=(V_{2},E_{2})$
\end_inset

, deciding whether they are isomorphic is deciding whether these graphs
 are essentially the same.
 More precisely, it is deciding whether there is a bijection 
\begin_inset Formula $\sigma:V_{1}\to V_{2}$
\end_inset

 such that 
\begin_inset Formula $(v,w)\in E_{1}$
\end_inset

 if and only if 
\begin_inset Formula $(\sigma(v),\sigma(w))\in E_{2}$
\end_inset

.
 A bijection that satisfies this constraint is called a 
\emph on
graph isomorphism from 
\begin_inset Formula $G_{1}$
\end_inset

 to 
\begin_inset Formula $G_{2}$
\end_inset

.
\end_layout

\begin_layout Example
To demonstrate graph isomorphism, we present two different drawings of the
 famous 
\emph on
Petersen Graph
\emph default
.
\end_layout

\begin_deeper
\begin_layout Standard

\lang british
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout

\lang british
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\lang british
\begin_inset Graphics
	filename Graphs/Petersen-pentagon.eps
	width 40col%

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:peterson-pentagon"

\end_inset

The Petersen Graph represented as an pentagon surrounded by another pentagon.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\lang british
\begin_inset Graphics
	filename Graphs/Petersen-9polygon.eps
	width 40col%

\end_inset


\end_layout

\begin_layout Plain Layout

\lang british
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:petersen-9polygon"

\end_inset

A representation based on a polygon with nine edges.
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Two different drawings of the Petersen Graph.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Although the two drawings look different, we will prove that they actually
 represent the same graph.
 Let 
\begin_inset Formula $G_{1}=(V_{1},E_{1})$
\end_inset

 be the graph represented by Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:peterson-pentagon"

\end_inset

 and 
\begin_inset Formula $G_{2}=(V_{2},E_{2})$
\end_inset

 be the graph represented by Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:petersen-9polygon"

\end_inset

.
 To prove 
\begin_inset Formula $G_{1}$
\end_inset

 and 
\begin_inset Formula $G_{2}$
\end_inset

 are isomorphic we will define a one-to-one mapping 
\begin_inset Formula $\sigma$
\end_inset

 and show that it is an isomorphism.
 Before having a close look at 
\begin_inset Formula $\sigma$
\end_inset

, notice that both 
\begin_inset Formula $G_{1}$
\end_inset

 and 
\begin_inset Formula $G_{2}$
\end_inset

 have the same number of edges and vertices.
 Moreover, both graphs have only vertices with degree exactly three.
 Thus, they meet some necessary but in general not sufficient criteria for
 being isomorphic.
\end_layout

\end_deeper
\begin_layout Example
It is 
\begin_inset Formula $V_{1}=\{a,b,c,d,e,A,B,C,D,E\}$
\end_inset

 and 
\begin_inset Formula $V_{2}=\{x'\,|\, x\in V_{1}\}$
\end_inset

.
 Let 
\begin_inset Formula $\sigma:V_{1}\to V_{2}$
\end_inset

 be defined by 
\begin_inset Formula $x\mapsto\sigma(x):=x'$
\end_inset

, which is a bijection.
 Notice that 
\begin_inset Formula $\sigma$
\end_inset

 preserves paths through the graph, which is another necessary condition
 for being an isomorphism.
 That is, the closed path 
\begin_inset Formula $(A,B,C,D,E)$
\end_inset

 becomes 
\begin_inset Formula $(A',B',C',D',E')$
\end_inset

, which is still a circle.
 Similar, the closed path 
\begin_inset Formula $(a,c,e,b,d)$
\end_inset

, the inner star in 
\begin_inset Formula $G_{1}$
\end_inset

, becomes the closed path 
\begin_inset Formula $(a',c',e',b',d')$
\end_inset

.
\end_layout

\begin_layout Example
So intuitively it is clear 
\begin_inset Formula $\sigma$
\end_inset

 is an isomorphism.
 For a formal proof, we look at the adjacency matrix of 
\begin_inset Formula $G_{1}$
\end_inset

 and 
\begin_inset Formula $\sigma(G_{1})$
\end_inset

.
 Since the graph is undirected, the adjacency matrix is symmetric.
 For convenience, we state only the upper half.
 One can think of it in three partitions: the path 
\begin_inset Formula $(A,B,C,D,E)$
\end_inset

, the inner pentagon and the edges going from 
\begin_inset Formula $x$
\end_inset

 to 
\begin_inset Formula $X$
\end_inset

.
 Comparing the adjacency matrix 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:adjacency-matrix-sigma-petersen"

\end_inset

 with the drawing 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:petersen-9polygon"

\end_inset

 it turns out that 
\begin_inset Formula $\sigma(G_{1})=G_{2}$
\end_inset

, and thus 
\begin_inset Formula $\sigma$
\end_inset

 being an isomorphism for 
\begin_inset Formula $G_{1}$
\end_inset

 and 
\begin_inset Formula $G_{2}$
\end_inset

.
 Therefore, 
\begin_inset Formula $G_{1}$
\end_inset

 and 
\begin_inset Formula $G_{2}$
\end_inset

 are isomorphic.
\end_layout

\begin_layout Example
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\size tiny
\begin_inset Tabular
<lyxtabular version="3" rows="11" columns="11">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
\begin_inset Formula $a$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
\begin_inset Formula $b$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
\begin_inset Formula $c$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
\begin_inset Formula $d$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
\begin_inset Formula $e$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
\begin_inset Formula $A$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
\begin_inset Formula $B$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
\begin_inset Formula $C$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
\begin_inset Formula $D$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
\begin_inset Formula $E$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
\begin_inset Formula $a$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
\begin_inset Formula $b$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
\begin_inset Formula $c$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
\begin_inset Formula $d$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
\begin_inset Formula $e$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
\begin_inset Formula $A$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
\begin_inset Formula $B$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
\begin_inset Formula $C$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
\begin_inset Formula $D$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
\begin_inset Formula $E$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\size default

\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:adjacency-matrix-petersen"

\end_inset

The adjacency matrix of 
\begin_inset Formula $G_{1}$
\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\size tiny
\begin_inset Tabular
<lyxtabular version="3" rows="11" columns="11">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
\begin_inset Formula $a'$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
\begin_inset Formula $b'$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
\begin_inset Formula $c'$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
\begin_inset Formula $d'$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
\begin_inset Formula $e'$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
\begin_inset Formula $A'$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
\begin_inset Formula $B'$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
\begin_inset Formula $C'$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
\begin_inset Formula $D'$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
\begin_inset Formula $E'$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
\begin_inset Formula $a'$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
\begin_inset Formula $b'$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
\begin_inset Formula $c'$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
\begin_inset Formula $d'$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
\begin_inset Formula $e'$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
\begin_inset Formula $A'$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
\begin_inset Formula $B'$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
\begin_inset Formula $C'$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
\begin_inset Formula $D'$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size tiny
\begin_inset Formula $E'$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:adjacency-matrix-sigma-petersen"

\end_inset

The adjacency matrix of 
\begin_inset Formula $\sigma(G_{1})$
\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Adjacency matrix of 
\begin_inset Formula $G_{1}$
\end_inset

 and 
\begin_inset Formula $\sigma(G_{1})$
\end_inset

.
 Comparing to Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:petersen-9polygon"

\end_inset

, it turns out that the adjacency matrix of 
\begin_inset Formula $\sigma(G_{1})$
\end_inset

 represents the graph shown.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
To decide whether or not two graphs are isomorphic is known as the 
\emph on
Graph Isomorphism Problem
\emph default
.
 It belongs to the problems in 
\begin_inset Formula $\NP$
\end_inset

, since one can guess and confirm mappings 
\begin_inset Formula $\sigma$
\end_inset

 in polynomial time, but it is not known to be 
\begin_inset Formula $\NP$
\end_inset

-complete.
 Moreover, it is known that the Graph Isomorphism Problem can only be 
\begin_inset Formula $\NP$
\end_inset

-complete if the polynomial hierarchy collapses
\begin_inset Foot
status open

\begin_layout Plain Layout
The polynomial hierarchy generalizes the complexity classes 
\begin_inset Formula $\P$
\end_inset

, 
\begin_inset Formula $\NP$
\end_inset

 and 
\begin_inset Formula $\coNP$
\end_inset

 to a hierarchy of increasingly complex classes.
 It is believed that higher classes of the hierarchy are honest supersets
 of their respective counterparts in lower levels.
\end_layout

\end_inset

 and it is thus believed not to be 
\begin_inset Formula $\NP$
\end_inset

-complete.
 As no polynomial time algorithm is known for the general case as well,
 the Graph Isomorphism Problem is thought to be an intermediate problem
 in 
\begin_inset Formula $\NP-\P$
\end_inset

 
\begin_inset CommandInset citation
LatexCommand cite
key "books/HomerSelman01"

\end_inset

.
\end_layout

\begin_layout Standard
Being thought to be in between 
\begin_inset Formula $\P$
\end_inset

 and 
\begin_inset Formula $\NP$
\end_inset

-complete, the Graph Isomorphism Problem is related to the Integer Factorization
 Problem, which is thought to be an intermediate problem as well.
 In fact, it was shown that Graph Isomorphism and Integer Factorization
 can be reduced to the problem of counting automorphisms for rings.
 Kayal and Saxena used this to show that both problems cannot be 
\begin_inset Formula $\NP$
\end_inset

-complete unless the polynomial hierarchy collapses 
\begin_inset CommandInset citation
LatexCommand cite
key "conf/coco/KayalS05"

\end_inset

.
\end_layout

\begin_layout Standard
As opposed to the general Graph Isomorphism Problem, it is known that the
 isomorphism problem is solvable in polynomial time for many classes of
 graphs, including planar graphs 
\begin_inset CommandInset citation
LatexCommand cite
key "journals/jacm/Hopcroft74"

\end_inset

.
 In this thesis, we will focus on graphs with bounded valence and demonstrate
 how the Graph Isomorphism Problem can be solved in polynomial time.
 We follow a proof due to Luks 
\begin_inset CommandInset citation
LatexCommand cite
key "journals/jcss/Luks82"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Preliminaries
\end_layout

\begin_layout Subsection
Algebra
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $G$
\end_inset

 be a group, and 
\begin_inset Formula $S\subseteq G$
\end_inset

 be a subset of this group.
 Let 
\begin_inset Formula $\langle S\rangle$
\end_inset

 be the smallest subgroup of 
\begin_inset Formula $G$
\end_inset

 that contains 
\begin_inset Formula $S$
\end_inset

.
 If 
\begin_inset Formula $\langle S\rangle=G$
\end_inset

, 
\begin_inset Formula $S$
\end_inset

 is called a 
\emph on
generator
\emph default
 for 
\begin_inset Formula $G$
\end_inset

.
\end_layout

\begin_layout Standard
Define minimal generator.
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $G$
\end_inset

 be a group, 
\begin_inset Formula $H$
\end_inset

 be a subgroup and 
\begin_inset Formula $g\in G$
\end_inset

.
 Then 
\begin_inset Formula $gH=\{gh:h\in H\}$
\end_inset

 is called the 
\emph on
left coset of 
\begin_inset Formula $H$
\end_inset

 in 
\begin_inset Formula $G$
\end_inset

 with respect to 
\begin_inset Formula $g$
\end_inset


\emph default
, and 
\begin_inset Formula $Hg=\{hg:h\in H\}$
\end_inset

 is called the 
\emph on
right coset of 
\begin_inset Formula $H$
\end_inset

 in 
\begin_inset Formula $G$
\end_inset

 with respect to 
\begin_inset Formula $g$
\end_inset


\emph default
.
 Cosets can also be defined as equivalence classes of the relation 
\begin_inset Formula $\sim$
\end_inset

 defined by 
\begin_inset Formula $x\sim y$
\end_inset

 if and only if 
\begin_inset Formula $x^{-1}y\in H$
\end_inset

.
 Therefore, the left (right) cosets of 
\begin_inset Formula $G$
\end_inset

 form a partition of 
\begin_inset Formula $G$
\end_inset

 
\begin_inset CommandInset citation
LatexCommand cite
key "mw-coset"

\end_inset

.
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $G$
\end_inset

 be a group and 
\begin_inset Formula $N\subset G$
\end_inset

 be a subgroup.
 We call 
\begin_inset Formula $N$
\end_inset

 
\emph on
normal
\emph default
, if and only if 
\begin_inset Formula $gN=Ng$
\end_inset

 holds for all 
\begin_inset Formula $g\in G$
\end_inset

.
 For normal subgroups 
\begin_inset Formula $N$
\end_inset

 of 
\begin_inset Formula $G$
\end_inset

, we write 
\begin_inset Formula $N\vartriangleleft G$
\end_inset

.
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $G$
\end_inset

 be a group.
 
\begin_inset Formula $G$
\end_inset

 is called 
\emph on
simple
\emph default
 if and only if the only normal subgroups are the trivial group and 
\begin_inset Formula $G$
\end_inset

 itself.
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $G$
\end_inset

 be a group, and 
\begin_inset Formula $N\vartriangleleft G$
\end_inset

.
 We define the 
\emph on
quotient group of 
\begin_inset Formula $N$
\end_inset

 modulo 
\begin_inset Formula $G$
\end_inset


\emph default
 as the set of all left cosets of 
\begin_inset Formula $N$
\end_inset

 in 
\begin_inset Formula $G$
\end_inset

, 
\begin_inset Formula $G/N=\{gN:g\in G\}$
\end_inset

.
 The quotient group and the product of subsets form an algebraic group.
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $G$
\end_inset

 be a group, and 
\begin_inset Formula $H\subseteq G$
\end_inset

 be a subgroup of 
\begin_inset Formula $H$
\end_inset

.
 The number of cosets of 
\begin_inset Formula $H$
\end_inset

 in 
\begin_inset Formula $G$
\end_inset

 is called the 
\emph on
index of the subgroup 
\begin_inset Formula $H$
\end_inset

 in 
\begin_inset Formula $G$
\end_inset


\emph default
, written as 
\begin_inset Formula $|G:H|$
\end_inset

.
 That is, 
\begin_inset Formula $|G:H|=|\{gH:g\in G\}|=|\{Hg:g\in G\}|$
\end_inset

.
 Since the quotient group is the set of cosets, we obtain for a normal subgroup
 
\begin_inset Formula $N\vartriangleleft G$
\end_inset

 that 
\begin_inset Formula $|G:N|=|G/N|$
\end_inset

.
\end_layout

\begin_layout Standard
We call a finite group 
\begin_inset Formula $G$
\end_inset

 
\emph on
2-group
\emph default
, if every element has a power of 2 as its order.
 More generally, we call a finite group 
\begin_inset Formula $G$
\end_inset

 
\begin_inset Formula $p$
\end_inset

-group, if every element has a power of 
\begin_inset Formula $p$
\end_inset

 as its order.
\end_layout

\begin_layout Lemma
A group 
\begin_inset Formula $G$
\end_inset

 is a 2-group if and only if 
\begin_inset Formula $|G|$
\end_inset

 is a power of 2.
\end_layout

\begin_layout Proof
TODO.
\begin_inset Note Note
status open

\begin_layout Plain Layout
TODO
\end_layout

\end_inset


\end_layout

\begin_layout Standard
We define the 
\emph on
action of 
\begin_inset Formula $G$
\end_inset

 on 
\begin_inset Formula $B$
\end_inset


\emph default
 if there is a homomorphism 
\begin_inset Formula $G\to\Sym B$
\end_inset

.
 The homomorphism yields a permutation of 
\begin_inset Formula $B$
\end_inset

 for every element in 
\begin_inset Formula $G$
\end_inset

.
 In this case, the set 
\begin_inset Formula $\{\sigma(b)\mid\sigma\in G\}$
\end_inset

 for an element 
\begin_inset Formula $b\in B$
\end_inset

 is called the 
\emph on

\begin_inset Formula $G$
\end_inset

-orbit of 
\begin_inset Formula $b$
\end_inset


\emph default
.
 The group 
\begin_inset Formula $G$
\end_inset

 acts 
\emph on
transitively on 
\begin_inset Formula $B$
\end_inset


\emph default
 if 
\begin_inset Formula $B$
\end_inset

 is a 
\begin_inset Formula $G$
\end_inset

-orbit.
\end_layout

\begin_layout Standard
For a group 
\begin_inset Formula $G$
\end_inset

 transitively acting on a set 
\begin_inset Formula $A$
\end_inset

, we define a 
\emph on

\begin_inset Formula $G$
\end_inset

-block
\emph default
 as a non-empty subset 
\begin_inset Formula $B$
\end_inset

 of 
\begin_inset Formula $A$
\end_inset

 for which any action 
\begin_inset Formula $\sigma$
\end_inset

 induced by 
\begin_inset Formula $G$
\end_inset

 either stabilizes 
\begin_inset Formula $B$
\end_inset

, 
\begin_inset Formula $\sigma(B)=B$
\end_inset

, or moves 
\begin_inset Formula $B$
\end_inset

 completely, 
\begin_inset Formula $\sigma(B)\cap B=\emptyset$
\end_inset

.
 In this case, we call the set 
\begin_inset Formula $\{\sigma(B)\mid\sigma\in G\}$
\end_inset

 a 
\begin_inset Formula $G$
\end_inset

-block system in 
\begin_inset Formula $A$
\end_inset

.
 For any 
\begin_inset Formula $b\in B$
\end_inset

, the set 
\begin_inset Formula $\{b\}$
\end_inset

 is a block.
 Therefore, we call a 
\begin_inset Formula $G$
\end_inset

-block system 
\emph on
minimal
\emph default
 if there are no 
\begin_inset Formula $G$
\end_inset

-blocks of size larger than one.
\end_layout

\begin_layout Lemma
Let 
\begin_inset Formula $P$
\end_inset

 be a transitive 
\begin_inset Formula $p$
\end_inset

-subgroup of 
\begin_inset Formula $\Sym A$
\end_inset

 with 
\begin_inset Formula $|A|>1$
\end_inset

.
 Then any minimal 
\begin_inset Formula $p$
\end_inset

-block system consists of exactly 
\begin_inset Formula $p$
\end_inset

 blocks.
 Furthermore, the subgroup 
\begin_inset Formula $P'$
\end_inset

 which stabilizes all of the blocks has index 
\begin_inset Formula $p$
\end_inset

 in 
\begin_inset Formula $P$
\end_inset

.
 
\begin_inset CommandInset citation
LatexCommand cite
key "journals/jcss/Luks82"

\end_inset


\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:generating-set-kernel-image"

\end_inset

Let 
\begin_inset Formula $G$
\end_inset

 and 
\begin_inset Formula $H$
\end_inset

 be groups, 
\begin_inset Formula $I\subseteq G$
\end_inset

, and 
\begin_inset Formula $f:G\to H$
\end_inset

 be a group homomorphism.
 If 
\begin_inset Formula $K$
\end_inset

 is a generating set for 
\begin_inset Formula $\Ker f$
\end_inset

 and 
\begin_inset Formula $f(I)$
\end_inset

 is a generating set for 
\begin_inset Formula $\Img f$
\end_inset

, then 
\begin_inset Formula $K\cup I$
\end_inset

 generates 
\begin_inset Formula $G$
\end_inset

.
\end_layout

\begin_layout Proof
Choose an arbitrary 
\begin_inset Formula $g\in G$
\end_inset

.
 The element 
\begin_inset Formula $f(g)$
\end_inset

 is a member of 
\begin_inset Formula $\Img f$
\end_inset

 and thus has a representation 
\begin_inset Formula $f(g)=\sum f(i_{k})^{\alpha_{k}}$
\end_inset

 for some 
\begin_inset Formula $i_{k}\in I$
\end_inset

, 
\begin_inset Formula $\alpha_{k}\in\{-1,1\}$
\end_inset

, 
\begin_inset Formula $0\leq k\leq m$
\end_inset

.
 Let 
\begin_inset Formula $h=g^{-1}\sum i_{k}^{\alpha_{k}}$
\end_inset

.
 Then 
\begin_inset Formula $f(h)=f(g^{-1})f(\sum i_{k}^{\alpha_{k}})=f(g)^{-1}\sum f(i_{k})^{\alpha_{k}}=f(g)^{-1}f(g)=1$
\end_inset

 and therefore, we have 
\begin_inset Formula $h,h^{-1}\in\Ker f$
\end_inset

.
 From the definition of 
\begin_inset Formula $h$
\end_inset

 we can derive 
\begin_inset Formula $g=\sum i_{k}^{\alpha_{k}}\cdot h^{-1}$
\end_inset

 and thus 
\begin_inset Formula $g$
\end_inset

 can be generated from 
\begin_inset Formula $I$
\end_inset

 and 
\begin_inset Formula $K$
\end_inset

.
\end_layout

\begin_layout Subsection
Computational Complexity
\end_layout

\begin_layout Standard
Definition of many-one-reduction and Turing-reduction.
\end_layout

\begin_layout Standard
Definition of oracle.
\end_layout

\begin_layout Standard
Reduction for function problems.
\end_layout

\begin_layout Standard
In this thesis, polynomial time reduction means Turing-reduction if not
 noted otherwise.
\end_layout

\begin_layout Subsection
Graphs
\end_layout

\begin_layout Standard
An ordered pair of two sets 
\begin_inset Formula $X=(V,E)$
\end_inset

 is called an 
\emph on
(undirected simple) graph
\emph default
, if 
\begin_inset Formula $E$
\end_inset

 is a subset of the set of all two-sets of two different elements of 
\begin_inset Formula $V$
\end_inset

.
 Elements of 
\begin_inset Formula $V$
\end_inset

 are called 
\emph on
vertices
\emph default
 or 
\emph on
nodes
\emph default
 of 
\begin_inset Formula $X$
\end_inset

, members of 
\begin_inset Formula $E$
\end_inset

 are called 
\emph on
edges
\emph default
 of 
\begin_inset Formula $X$
\end_inset

.
 By 
\begin_inset Formula $V(X)$
\end_inset

 and 
\begin_inset Formula $E(X)$
\end_inset

, we refer to the set of nodes of any graph 
\begin_inset Formula $X$
\end_inset

 and the set of edges of 
\begin_inset Formula $X$
\end_inset

 respectively.
 Although members of 
\begin_inset Formula $E$
\end_inset

 are sets by definition, we often write 
\begin_inset Formula $vw$
\end_inset

 or 
\begin_inset Formula $(v,w)$
\end_inset

 instead of 
\begin_inset Formula $\{v,w\}$
\end_inset

 for the sake of simplicity.
 As opposed to directed graphs, we have 
\begin_inset Formula $vw\in E$
\end_inset

 if and only if 
\begin_inset Formula $wv\in E$
\end_inset

 for any graph in this thesis.
 Moreover, all graphs in this thesis are simple, that is, they have no edges
 
\begin_inset Formula $vv$
\end_inset

 for any 
\begin_inset Formula $v\in V$
\end_inset

.
 We only consider finite graphs in this thesis, as we use 
\begin_inset Formula $|E|$
\end_inset

 and 
\begin_inset Formula $|V|$
\end_inset

 to define the input length for algorithms.
\end_layout

\begin_layout Standard
A list of edges 
\begin_inset Formula $(sv_{1},v_{1}v_{2},...,v_{n-1}v_{n},v_{n}t)$
\end_inset

 of a graph 
\begin_inset Formula $X$
\end_inset

 is called a 
\emph on
path from 
\begin_inset Formula $s$
\end_inset

 to 
\begin_inset Formula $t$
\end_inset


\emph default
.
 A graph is called 
\emph on
connected
\emph default
, if for any pair of nodes 
\begin_inset Formula $v,w\in V(X)$
\end_inset

, there is a path in 
\begin_inset Formula $X$
\end_inset

 from 
\begin_inset Formula $v$
\end_inset

 to 
\begin_inset Formula $w$
\end_inset

.
 Otherwise, 
\begin_inset Formula $X$
\end_inset

 is called 
\emph on
disconnected
\emph default
.
\end_layout

\begin_layout Standard
For any node 
\begin_inset Formula $v\in V(X)$
\end_inset

 of a (simple) graph 
\begin_inset Formula $X$
\end_inset

, we define the 
\emph on
degree of 
\begin_inset Formula $v$
\end_inset


\emph default
 to be the number of edges adjacent to 
\begin_inset Formula $v$
\end_inset

, 
\begin_inset Formula $\deg v=|\{e\in E\,|\, v\in e\}|$
\end_inset

.
 A graph 
\begin_inset Formula $X$
\end_inset

 has 
\emph on
valence bounded by 
\begin_inset Formula $k$
\end_inset


\emph default
, if for any 
\begin_inset Formula $v\in V(X)$
\end_inset

, 
\begin_inset Formula $\deg v\leq k$
\end_inset

.
 Graphs with valence bounded by three are called 
\emph on
trivalent
\emph default
.
\end_layout

\begin_layout Standard
For any two graphs 
\begin_inset Formula $X_{1}=(V_{1},E_{1})$
\end_inset

 and 
\begin_inset Formula $X_{2}=(V_{2},E_{2})$
\end_inset

, we call a bijective function 
\begin_inset Formula $\sigma:V_{1}\to V_{2}$
\end_inset

 a graph 
\emph on
isomorphism
\emph default
, if 
\begin_inset Formula $\sigma$
\end_inset

 preserves edge relations, that is, for any 
\begin_inset Formula $v,w\in V_{1}$
\end_inset

 it holds that 
\begin_inset Formula $vw\in E_{1}\iff\sigma(v)\sigma(w)\in E_{2}$
\end_inset

.
 For an isomorphism 
\begin_inset Formula $\sigma$
\end_inset

 we can also write 
\begin_inset Formula $\sigma:X_{1}\to X_{2}$
\end_inset

.
 If there is an isomorphism, 
\begin_inset Formula $X_{1}$
\end_inset

 and 
\begin_inset Formula $X_{2}$
\end_inset

 are called 
\emph on
isomorphic
\emph default
.
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $X$
\end_inset

 be a graph.
 Any graph isomorphism 
\begin_inset Formula $\sigma:X\to X$
\end_inset

 that maps 
\begin_inset Formula $X$
\end_inset

 to itself is called a graph 
\emph on
automorphism
\emph default
.
 The identity function is always an automorphism.
 The set of all automorphisms for a graph 
\begin_inset Formula $X$
\end_inset

 together with composition of functions is called the 
\emph on
automorphism group 
\begin_inset Formula $\Aut X$
\end_inset

.
 
\emph default
For any 
\begin_inset Formula $e\in E(X)$
\end_inset

, we define 
\begin_inset Formula $\Aut_{e}(X)$
\end_inset

 to be the set of automorphisms of 
\begin_inset Formula $X$
\end_inset

 that fix 
\begin_inset Formula $e$
\end_inset

, that is, for 
\begin_inset Formula $\sigma\in\Aut_{e}(X)$
\end_inset

 with 
\begin_inset Formula $e=vw$
\end_inset

 we have 
\begin_inset Formula $\sigma(\{v,w\})=\{v,w\}$
\end_inset

.
\end_layout

\begin_layout Lemma
\begin_inset Formula $\Aut_{e}(X)\leq\Aut(X)$
\end_inset

.
\begin_inset Marginal
status open

\begin_layout Plain Layout
TODO remove?
\end_layout

\end_inset


\end_layout

\begin_layout Definition
Given two (connected) graphs 
\begin_inset Formula $X_{1}$
\end_inset

 and 
\begin_inset Formula $X_{2}$
\end_inset

, the 
\emph on
Graph Isomorphism Problem (for connected graphs)
\emph default
 is to decide whether or not they are isomorphic.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:poly-time-reduction-connected-graphs"

\end_inset

The Graph Isomorphism Problem is polynomial time reducible to the Graph
 Isomorphism Problem for connected graphs.
\end_layout

\begin_layout Proof
For any given graph, we can compute the number of connected components in
 polynomial time using a transitive hull algorithm similar to Algorithm
 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:orbits"

\end_inset

.
\end_layout

\begin_layout Proof
Let 
\begin_inset Formula $X_{1}=(V_{1},E_{1})$
\end_inset

, 
\begin_inset Formula $X_{2}=(V_{2},E_{2})$
\end_inset

 be two possibly disconnected graphs.
 We assume 
\begin_inset Formula $X_{1}$
\end_inset

 and 
\begin_inset Formula $X_{2}$
\end_inset

 consist of an equal number of nodes, if they do not, they are not isomorphic
 and we are done.
 We compute all connected components for 
\begin_inset Formula $X_{1}$
\end_inset

 and 
\begin_inset Formula $X_{2}$
\end_inset

.
 If both graphs are connected, we have a Graph Isomorphism Problem for connected
 graphs and we are done.
 If the graphs have different number of connected components (for instance,
 one graph is connected, and the other is not), then they are not isomorphic
 and we are done.
\end_layout

\begin_layout Proof
Now assume both graphs are not connected and have an equal number of connected
 components.
 
\end_layout

\begin_layout Proof
For any given graph 
\begin_inset Formula $X=(V,E)$
\end_inset

, let 
\begin_inset Formula $\widetilde{X}=(\widetilde{V},\widetilde{E})$
\end_inset

 be the graph with one additional node 
\begin_inset Formula $x_{X}$
\end_inset

 that is connected to every node in 
\begin_inset Formula $X$
\end_inset

.
 Using this operation, 
\begin_inset Formula $\widetilde{X}_{1}$
\end_inset

 and 
\begin_inset Formula $\widetilde{X}_{2}$
\end_inset

 are both connected.
 Computing 
\begin_inset Formula $\widetilde{X}$
\end_inset

 takes polynomial time, since only two nodes and 
\begin_inset Formula $|V_{1}|+|V_{2}|$
\end_inset

 edges have to be added.
 We will see that 
\begin_inset Formula $X_{1}$
\end_inset

 and 
\begin_inset Formula $X_{2}$
\end_inset

 are isomorphic if and only if 
\begin_inset Formula $\widetilde{X}_{1}$
\end_inset

 and 
\begin_inset Formula $\widetilde{X}_{2}$
\end_inset

 are isomorphic, hence we can use the algorithm for Graph Isomorphism for
 connected graphs to decide isomorphism for 
\begin_inset Formula $X_{1}$
\end_inset

 and 
\begin_inset Formula $X_{2}$
\end_inset

.
 
\end_layout

\begin_layout Proof
Notice that, since 
\begin_inset Formula $X$
\end_inset

 is not connected, 
\begin_inset Formula $X$
\end_inset

 does not have a node that is connected to every other node in 
\begin_inset Formula $X$
\end_inset

.
 Therefore, there is no node in 
\begin_inset Formula $X$
\end_inset

 with degree 
\begin_inset Formula $|V|-1$
\end_inset

.
 From construction we know that 
\begin_inset Formula $|\widetilde{V}|=|V|+1$
\end_inset

 and the degree of the new node 
\begin_inset Formula $x_{X}\in\widetilde{X}$
\end_inset

 is 
\begin_inset Formula $|\widetilde{V}|-1=|V|$
\end_inset

.
 Hence 
\begin_inset Formula $x_{X}$
\end_inset

 is the only node in 
\begin_inset Formula $\widetilde{X}$
\end_inset

 of degree 
\begin_inset Formula $|\widetilde{V}|-1$
\end_inset

.
\end_layout

\begin_layout Proof
To see the equivalence, let 
\begin_inset Formula $\widetilde{X}_{1}$
\end_inset

 and 
\begin_inset Formula $\widetilde{X}_{2}$
\end_inset

 be isomorphic with 
\begin_inset Formula $\sigma:\widetilde{X}_{1}\to\widetilde{X}_{2}$
\end_inset

 being an isomorphism.
 Since 
\begin_inset Formula $\sigma$
\end_inset

 preserves node degree, 
\begin_inset Formula $\sigma$
\end_inset

 maps 
\begin_inset Formula $x_{X_{1}}$
\end_inset

 to 
\begin_inset Formula $x_{X_{2}}$
\end_inset

, both nodes being the only ones in their graph having node degree 
\begin_inset Formula $|\widetilde{V}_{1}|-1=|\widetilde{V}_{2}|-1$
\end_inset

.
 Thus, the restriction of 
\begin_inset Formula $\sigma$
\end_inset

 to 
\begin_inset Formula $X_{1}$
\end_inset

 is a graph isomorphism 
\begin_inset Formula $X_{1}\to X_{2}$
\end_inset

.
\end_layout

\begin_layout Proof
Conversely, if 
\begin_inset Formula $X_{1}$
\end_inset

 and 
\begin_inset Formula $X_{2}$
\end_inset

 are isomorphic with an isomorphism 
\begin_inset Formula $\sigma$
\end_inset

 we can compute 
\begin_inset Formula $\widetilde{X}_{1}$
\end_inset

 and 
\begin_inset Formula $\widetilde{X}_{2}$
\end_inset

 and extend 
\begin_inset Formula $\sigma$
\end_inset

 to map 
\begin_inset Formula $x_{X_{1}}$
\end_inset

 to 
\begin_inset Formula $x_{X_{2}}$
\end_inset

 to get an isomorphism of 
\begin_inset Formula $\widetilde{X}_{1}$
\end_inset

 and 
\begin_inset Formula $\widetilde{X}_{2}$
\end_inset

.
\end_layout

\begin_layout Standard
With justification given by Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:poly-time-reduction-connected-graphs"

\end_inset

, we assume from now on connected graphs.
\end_layout

\begin_layout Subsection
On the Size of Group Representations
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:group-size-representation"

\end_inset

Any group 
\begin_inset Formula $G$
\end_inset

 has a generating set of cardinality 
\begin_inset Formula $\log_{2}|G|$
\end_inset

 or less.
\end_layout

\begin_layout Proof
Let 
\begin_inset Formula $\widetilde{G}=\{g_{1},...,g_{m}\}$
\end_inset

 be a minimal generating set for 
\begin_inset Formula $G=\langle\widetilde{G}\rangle$
\end_inset

 and define 
\begin_inset Formula $G_{n}=\langle g_{1},...,g_{n}\rangle$
\end_inset

 for 
\begin_inset Formula $n=1,...,m$
\end_inset

.
 By minimality, 
\begin_inset Formula $e\notin\widetilde{G}$
\end_inset

.
 Assume 
\begin_inset Formula $g_{n+1}\in G_{n}$
\end_inset

, then 
\begin_inset Formula $\widetilde{G}\setminus\{g_{n+1}\}$
\end_inset

 is still a generating set for 
\begin_inset Formula $G$
\end_inset

.
 Therefore, 
\begin_inset Formula $g_{n+1}\notin G_{n}$
\end_inset

 and 
\begin_inset Formula $G_{n+1}$
\end_inset

 has at least two disjoint cosets, 
\begin_inset Formula $eG_{n}$
\end_inset

 and 
\begin_inset Formula $g_{n+1}G_{n}$
\end_inset

.
 Therefore, 
\begin_inset Formula $|G_{n+1}|\geq2|G_{n}|$
\end_inset

.
 By induction, we obtain 
\begin_inset Formula $|G|=|G_{m}|\geq2^{m}$
\end_inset

.
 Hence, 
\begin_inset Formula $m\leq\log_{2}|G|$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Basic Polynomial-Time Graph Operations
\end_layout

\begin_layout Standard
To tackle the Graph Automorphism Problem for graphs with valence bounded
 by three, we need some basic graph operations for permutation groups that
 can be computed in polynomial time.
 Due to the succinct notation of groups proven in Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:group-size-representation"

\end_inset

, which results in a short input length for algorithms, it is not obvious
 that these computations can be carried out in polynomial time.
 
\end_layout

\begin_layout Subsection
Determine the 
\begin_inset Formula $G$
\end_inset

-orbits
\end_layout

\begin_layout Standard
Let the group 
\begin_inset Formula $G\subseteq\Sym A$
\end_inset

 be generated by the generators 
\begin_inset Formula $g_{1},...,g_{m}$
\end_inset

.
 We can use a transitive hull algorithm to compute the 
\begin_inset Formula $G$
\end_inset

-orbit of any element 
\begin_inset Formula $a\in A$
\end_inset

 
\begin_inset CommandInset citation
LatexCommand cite
key "journals/jcss/Luks82"

\end_inset

.
 More specifically, we start with 
\begin_inset Formula $H_{a}=\{a\}$
\end_inset

 and keep adding the result of the operation 
\begin_inset Formula $g_{k}(h)$
\end_inset

, with 
\begin_inset Formula $h\in H_{a}$
\end_inset

 and 
\begin_inset Formula $k=1,...,m$
\end_inset

 to 
\begin_inset Formula $H_{a}$
\end_inset

 until all operations do not yield new results anymore.
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
placement H
wide false
sideways false
status open

\begin_layout Algorithm
* input: set 
\begin_inset Formula $A$
\end_inset

, generators 
\begin_inset Formula $g_{1},...,g_{m}$
\end_inset

 of group 
\begin_inset Formula $G\subseteq\Sym A$
\end_inset


\end_layout

\begin_layout Algorithm
* output: collection of 
\begin_inset Formula $G$
\end_inset

-orbits 
\begin_inset Formula $H_{a}$
\end_inset

 for each element 
\begin_inset Formula $a\in A$
\end_inset


\end_layout

\begin_layout Algorithm
*
\end_layout

\begin_layout Algorithm
for all 
\begin_inset Formula $a\in A$
\end_inset


\end_layout

\begin_deeper
\begin_layout Algorithm
* 
\begin_inset Formula $H_{a}\leftarrow\lbrace a\rbrace$
\end_inset


\end_layout

\begin_layout Algorithm
repeat
\end_layout

\begin_deeper
\begin_layout Algorithm
* 
\begin_inset Formula $H_{a}\leftarrow H_{a}\cup\{g_{k}(h)\mid k=1,...,m\text{ and }h\in H_{a}\}$
\end_inset


\end_layout

\end_deeper
\begin_layout Algorithm
until no new elements were added
\end_layout

\end_deeper
\begin_layout Algorithm
endfor
\end_layout

\begin_layout Algorithm
return 
\begin_inset Formula $\lbrace H_{a}\mid a\in A\}$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "alg:orbits"

\end_inset

Algorithm to compute the 
\begin_inset Formula $G$
\end_inset

-orbits of all 
\begin_inset Formula $a\in A$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
We can illustrate the transitive hull algorithm approach for a fixed member
 
\begin_inset Formula $a\in A$
\end_inset

 with a graph that contains a node for each member of 
\begin_inset Formula $H_{a}$
\end_inset

 and an edge going from every 
\begin_inset Formula $h$
\end_inset

 to 
\begin_inset Formula $g_{k}(h)$
\end_inset

.
 Since all element eventually decent from 
\begin_inset Formula $a$
\end_inset

, the graph is connected.
 Since 
\begin_inset Formula $|A|$
\end_inset

 is an upper bound for the size of the 
\begin_inset Formula $G$
\end_inset

-orbit of 
\begin_inset Formula $a$
\end_inset

, and each node has at most 
\begin_inset Formula $m$
\end_inset

 outgoing edges, one for each generator, we can conclude that the algorithm
 terminates within polynomial time.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename Graphs/transitive-hull.eps

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:orbit-transitiv-hull-graph"

\end_inset

Example of the transitive hull algorithm to determine the 
\begin_inset Formula $G$
\end_inset

-orbit of 
\begin_inset Formula $a$
\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Assume 
\begin_inset Formula $A=\{a,b,c\}$
\end_inset

 and 
\begin_inset Formula $G=\langle g_{1},g_{2}\rangle$
\end_inset

 with 
\begin_inset Formula $g_{1}$
\end_inset

 transposing 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

, and 
\begin_inset Formula $g_{2}$
\end_inset

 transposing 
\begin_inset Formula $b$
\end_inset

 and 
\begin_inset Formula $c$
\end_inset

.
 
\begin_inset Formula $\Sym A$
\end_inset

 has 
\begin_inset Formula $|A|!=3!=6$
\end_inset

 elements, and we can find six different members of 
\begin_inset Formula $\langle g_{1},g_{2}\rangle$
\end_inset

.
 Therefore, 
\begin_inset Formula $G=\Sym A$
\end_inset

.
 From this we can conclude that the 
\begin_inset Formula $G$
\end_inset

-orbit of 
\begin_inset Formula $a$
\end_inset

 is 
\begin_inset Formula $\{a,b,c\}$
\end_inset

.
 However, neither 
\begin_inset Formula $g_{1}$
\end_inset

 nor 
\begin_inset Formula $g_{2}$
\end_inset

 map 
\begin_inset Formula $a$
\end_inset

 to 
\begin_inset Formula $c$
\end_inset

 directly.
 We can only derive 
\begin_inset Formula $c$
\end_inset

 from a second iteration: 
\begin_inset Formula $g_{2}(g_{1}(a))=g_{2}(b)=c$
\end_inset

.
 The corresponding graph is illustrated in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:orbit-transitiv-hull-graph"

\end_inset

.
\end_layout

\begin_layout Standard
We formalize the result of this section in 
\end_layout

\begin_layout Theorem
\begin_inset CommandInset label
LatexCommand label
name "thm:compute-g-orbits-poly"

\end_inset

Given a set 
\begin_inset Formula $A$
\end_inset

 and generators 
\begin_inset Formula $g_{1},...,g_{m}$
\end_inset

 of 
\begin_inset Formula $G\subseteq\Sym A$
\end_inset

, we can compute the 
\begin_inset Formula $G$
\end_inset

-orbit of all 
\begin_inset Formula $a\in A$
\end_inset

 in polynomial time.
\end_layout

\begin_layout Subsection
Determine the Order of 
\begin_inset Formula $G$
\end_inset


\end_layout

\begin_layout Standard
In order to determine the order of 
\begin_inset Formula $G$
\end_inset

 from a set of generators, we write 
\begin_inset Formula $A=\{a_{1},...,a_{n}\}$
\end_inset

 and define a chain of subgroups 
\begin_inset Formula $G_{i}$
\end_inset

, each 
\begin_inset Formula $G_{i}$
\end_inset

 containing only elements that fix elements 
\begin_inset Formula $a_{1}$
\end_inset

,...,
\begin_inset Formula $a_{i}$
\end_inset

 
\begin_inset CommandInset citation
LatexCommand cite
key "Furst:1980:PAP:1382434.1382665"

\end_inset

.
 This yields
\begin_inset Formula 
\[
\{1\}=G_{n-1}\subseteq G_{n-2}\subseteq...\subseteq G_{1}\subseteq G_{0}=G.
\]

\end_inset


\end_layout

\begin_layout Standard
Consider the quotients 
\begin_inset Formula $G_{i}/G_{i+1}$
\end_inset

 
\begin_inset Note Note
status open

\begin_layout Plain Layout
check if the term quotient is defined
\end_layout

\end_inset

in this chain.
 We can write 
\begin_inset Formula $G$
\end_inset


\end_layout

\begin_layout Lemma
Let 
\begin_inset Formula $G$
\end_inset

 and 
\begin_inset Formula $G_{1},...,G_{n-1}$
\end_inset

 be defined as above.
 
\end_layout

\begin_layout Theorem
Given a set of generators for a subgroup 
\begin_inset Formula $G$
\end_inset

 of 
\begin_inset Formula $S_{n}$
\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
define 
\begin_inset Formula $S_{n}$
\end_inset


\end_layout

\end_inset

, one can determine the order of 
\begin_inset Formula $|G|$
\end_inset

 in polynomial-time.
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
placement H
wide false
sideways false
status open

\begin_layout Algorithm
* input: an element 
\begin_inset Formula $\alpha$
\end_inset

 of 
\begin_inset Formula $G$
\end_inset


\end_layout

\begin_layout Algorithm
* output: none
\end_layout

\begin_layout Algorithm
*
\end_layout

\begin_layout Algorithm
for 
\begin_inset Formula $j=0...n-2$
\end_inset


\end_layout

\begin_deeper
\begin_layout Algorithm
if 
\begin_inset Formula $\gamma^{-1}\alpha\in G_{i+1}$
\end_inset

 for some 
\begin_inset Formula $\gamma\in C_{i}$
\end_inset


\end_layout

\begin_deeper
\begin_layout Algorithm
* 
\begin_inset Formula $\alpha\leftarrow\gamma^{-1}\alpha$
\end_inset


\end_layout

\end_deeper
\begin_layout Algorithm
else
\end_layout

\begin_deeper
\begin_layout Algorithm
* 
\begin_inset Formula $C_{i}\leftarrow C_{i}\cup\lbrace\alpha\rbrace$
\end_inset


\end_layout

\begin_layout Algorithm
return
\end_layout

\end_deeper
\begin_layout Algorithm
endif
\end_layout

\end_deeper
\begin_layout Algorithm
endfor
\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "alg:order-filter"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float algorithm
placement H
wide false
sideways false
status open

\begin_layout Algorithm
* input: generators 
\begin_inset Formula $\lbrace g_{1},...,g_{m}\rbrace$
\end_inset

 that generate permutation group 
\begin_inset Formula $G$
\end_inset


\end_layout

\begin_layout Algorithm
* output: 
\begin_inset Formula $|G|$
\end_inset


\end_layout

\begin_layout Algorithm
*
\end_layout

\begin_layout Algorithm
* for all 
\begin_inset Formula $i$
\end_inset

: 
\begin_inset Formula $C_{i}\leftarrow\lbrace1\rbrace$
\end_inset


\end_layout

\begin_layout Algorithm
* filter all generators 
\begin_inset Formula $g_{k}$
\end_inset


\end_layout

\begin_layout Algorithm
* filter the sets 
\begin_inset Formula $C_{i}C_{j}$
\end_inset

 with 
\begin_inset Formula $i\geq j$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "alg:order"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
finish proof
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Determine a Minimal Block System
\end_layout

\begin_layout Standard
From 
\begin_inset CommandInset citation
LatexCommand cite
key "atkinson1975algorithm"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float algorithm
placement H
wide false
sideways false
status open

\begin_layout Algorithm
* input: non-empty set 
\begin_inset Formula $\Omega$
\end_inset

, set of generators 
\begin_inset Formula $\lbrace g_{1},...,g_{m}\rbrace$
\end_inset

 that generate permutation group 
\begin_inset Formula $G$
\end_inset

, element 
\begin_inset Formula $\omega\in\Omega$
\end_inset

, 
\begin_inset Formula $\omega\neq1$
\end_inset


\end_layout

\begin_layout Algorithm
* output: 
\begin_inset Note Note
status open

\begin_layout Plain Layout
TODO
\end_layout

\end_inset


\end_layout

\begin_layout Algorithm
*
\end_layout

\begin_layout Algorithm
* 
\begin_inset Formula $C\leftarrow\lbrace\omega\rbrace$
\end_inset


\end_layout

\begin_layout Algorithm
* 
\begin_inset Formula $f(\alpha)\leftarrow\alpha$
\end_inset

 for all 
\begin_inset Formula $\alpha\in\Omega\setminus\lbrace\omega\rbrace$
\end_inset


\end_layout

\begin_layout Algorithm
* 
\begin_inset Formula $f(\omega)\leftarrow1$
\end_inset


\end_layout

\begin_layout Algorithm
while 
\begin_inset Formula $C\neq\emptyset$
\end_inset


\end_layout

\begin_deeper
\begin_layout Algorithm
* delete a symbol 
\begin_inset Formula $\beta$
\end_inset

 from 
\begin_inset Formula $C$
\end_inset

 and 
\begin_inset Formula $\alpha\leftarrow f(\beta)$
\end_inset


\end_layout

\begin_layout Algorithm
for 
\begin_inset Formula $j=1...m-1$
\end_inset


\end_layout

\begin_deeper
\begin_layout Algorithm
\begin_inset Formula $\gamma\leftarrow\alpha g_{j}$
\end_inset

, 
\begin_inset Formula $\delta\leftarrow\beta g_{j}$
\end_inset


\end_layout

\begin_layout Algorithm
if 
\begin_inset Formula $f(\gamma)\neq f(\delta)$
\end_inset


\end_layout

\begin_deeper
\begin_layout Algorithm
* ensure 
\begin_inset Formula $f(\delta)<f(\gamma)$
\end_inset

 (rename if necessary)
\end_layout

\begin_layout Algorithm
* 
\begin_inset Formula $C\leftarrow C\cup\lbrace f(\gamma)\rbrace$
\end_inset


\end_layout

\begin_layout Algorithm
for all 
\begin_inset Formula $\epsilon$
\end_inset

 with 
\begin_inset Formula $f(\epsilon)=f(\gamma)$
\end_inset


\end_layout

\begin_deeper
\begin_layout Algorithm
* 
\begin_inset Formula $f(\epsilon)\leftarrow f(\delta)$
\end_inset


\end_layout

\end_deeper
\begin_layout Algorithm
endfor
\end_layout

\end_deeper
\begin_layout Algorithm
endif
\end_layout

\end_deeper
\begin_layout Algorithm
endfor
\end_layout

\end_deeper
\begin_layout Algorithm
endwhile
\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "alg:blocksystem"

\end_inset

Polynomial-time algorithm to find the blocks of imprimitivity of a group
 from generating permutations.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
finish proof
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:valence-3"

\end_inset

Graphs with Valence Bounded By Three
\end_layout

\begin_layout Standard
In this section, we will show that testing isomorphism of graphs with valence
 bounded by three is possible in polynomial time.
 
\end_layout

\begin_layout Definition
\begin_inset CommandInset label
LatexCommand label
name "def:trivalent-problems"

\end_inset

We define the following problems.
\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset CommandInset label
LatexCommand label
name "pro:gi-trivalent-graphs"

\end_inset

Given two trivalent graphs, the 
\emph on
Graph Isomorphism Problem for Trivalent Graphs
\emph default
 is to decide whether or not they are isomorphic.
\end_layout

\begin_layout Enumerate
\begin_inset CommandInset label
LatexCommand label
name "pro:automorphism-generator-trivalent-graphs"

\end_inset

 Given a trivalent graph 
\begin_inset Formula $X$
\end_inset

, the 
\emph on
Automorphism Generator Problem for Trivalent Graphs (with respect to 
\begin_inset Formula $e$
\end_inset

)
\emph default
 is to find a generating set for the group 
\begin_inset Formula $\Aut_{e}(X)$
\end_inset

, where 
\begin_inset Formula $e$
\end_inset

 is a fixed edge in 
\begin_inset Formula $X$
\end_inset

.
\end_layout

\begin_layout Enumerate
\begin_inset CommandInset label
LatexCommand label
name "pro:color-automorphism-2-groups"

\end_inset

Given a set of generators for a 2-subgroup 
\begin_inset Formula $G$
\end_inset

 of 
\begin_inset Formula $\Sym(A)$
\end_inset

 with 
\begin_inset Formula $A$
\end_inset

 being a colored set, the 
\emph on
Color Automorphism Problem for 2-groups
\emph default
 is to find generators for the biggest color-preserving subgroup of 
\begin_inset Formula $G$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Theorem
\begin_inset CommandInset label
LatexCommand label
name "thm:gi-trivalent-graphs-reduceto-automorphism-generator-trivalent-graphs"

\end_inset

The Graph Isomorphism Problem for Trivalent Graphs is polynomial-time reducible
 to the Automorphism Generator Problem for Trivalent Graphs.
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Theorem
\begin_inset CommandInset label
LatexCommand label
name "thm:automorphism-generator-trivalent-graphs-reduceto-color-automorphism-2-groups"

\end_inset

The Automorphism Generator Problem for Trivalent Graphs is polynomial-time
 reducible to the Color Automorphism Problem for 2-groups.
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Theorem
\begin_inset CommandInset label
LatexCommand label
name "thm:color-automorphism-2-groups-polynomial-time"

\end_inset

There is a polynomial-time algorithm for the Color Automorphism Problem
 for 2-groups.
\end_layout

\begin_layout Standard
Combining the results of these theorems yields
\end_layout

\begin_layout Corollary
\begin_inset CommandInset label
LatexCommand label
name "cor:gi-trivalent-graphs-polynomial-time"

\end_inset

There is a polynomial-time algorithm for the Graph Isomorphism Problem for
 Trivalent Graphs.
\end_layout

\begin_layout Proof
With Theorems 
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:gi-trivalent-graphs-reduceto-automorphism-generator-trivalent-graphs"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:automorphism-generator-trivalent-graphs-reduceto-color-automorphism-2-groups"

\end_inset

 we obtain a polynomial time reduction from the Graph Isomorphism Problem
 for Trivalent Graphs to the Color Automorphism Problem for 2-groups.
 Theorem 
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:color-automorphism-2-groups-polynomial-time"

\end_inset

 states the latter is solvable in polynomial time.
 Therefore, we can decide the Graph Isomorphism Problem for Trivalent Graphs
 in polynomial time.
\end_layout

\begin_layout Standard
We will prove the theorems separately in the following subsections.
 To ensure the integrity of the proofs, no reference is made to the theorems
 above.
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sub:valence-3-first-red"

\end_inset

Reduction to the Automorphism Generator Problem
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $X_{1}=(V_{1},E_{1})$
\end_inset

 and 
\begin_inset Formula $X_{2}=(V_{2},E_{2})$
\end_inset

 be two graphs with valence bounded by three.
 We will state a polynomial-time algorithm to check whether 
\begin_inset Formula $X_{1}$
\end_inset

 and 
\begin_inset Formula $X_{2}$
\end_inset

 are isomorphic based on an algorithm that determines 
\begin_inset Formula $\Aut_{e}(X)$
\end_inset

, where 
\begin_inset Formula $X$
\end_inset

 will be a trivalent graph built of 
\begin_inset Formula $X_{1}$
\end_inset

 and 
\begin_inset Formula $X_{2}$
\end_inset

.
\end_layout

\begin_layout Standard
By Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:poly-time-reduction-connected-graphs"

\end_inset

, the Graph Isomorphism Problem is polynomial time reducible to the Graph
 Isomorphism Problem for connected graphs, we assume 
\begin_inset Formula $X_{1}$
\end_inset

 and 
\begin_inset Formula $X_{2}$
\end_inset

 to be connected.
\end_layout

\begin_layout Definition
Let 
\begin_inset Formula $X_{1}$
\end_inset

 and 
\begin_inset Formula $X_{2}$
\end_inset

 be two graphs containing the edges 
\begin_inset Formula $e_{1}=v_{1}w_{1}\in E_{1}$
\end_inset

 and 
\begin_inset Formula $e_{2}=v_{2}w_{2}\in E_{2}$
\end_inset

.
 Choose 
\begin_inset Formula $x_{1},x_{2}\notin V_{1}\cup V_{2}$
\end_inset

 and define 
\begin_inset Formula $X_{1}\ast X_{2}$
\end_inset

 to be the graph with nodes 
\begin_inset Formula $V_{1}\cup V_{2}\cup\{x_{1},x_{2}\}$
\end_inset

 and edges 
\begin_inset Formula 
\[
(E_{1}-e_{1})\cup\{v_{1}x_{1},x_{1}w_{1}\}\,\,\cup\,\,(E_{2}-e_{2})\cup\{v_{2}x_{2},x_{2}w_{2}\}\,\,\cup\,\,\{x_{1}x_{2}\},
\]

\end_inset

that is, we insert the new nodes 
\begin_inset Formula $x_{1}$
\end_inset

 and 
\begin_inset Formula $x_{2}$
\end_inset

, breaking down edges 
\begin_inset Formula $e_{1}$
\end_inset

 and 
\begin_inset Formula $e_{2}$
\end_inset

 in two pieces, and connect 
\begin_inset Formula $x_{1}$
\end_inset

 and 
\begin_inset Formula $x_{2}$
\end_inset

 with a new edge.
\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:trivalent-connect-aut"

\end_inset

 shows 
\begin_inset Formula $X_{1}\ast X_{2}$
\end_inset

.
 Notice that, since 
\begin_inset Formula $X_{1}$
\end_inset

 and 
\begin_inset Formula $X_{2}$
\end_inset

 are connected, and 
\begin_inset Formula $(x_{1},x_{2})$
\end_inset

 connects two connected parts, 
\begin_inset Formula $X_{1}\ast X_{2}$
\end_inset

 is connected.
 Furthermore, since the degree of 
\begin_inset Formula $v_{1},v_{2},w_{1},w_{2}$
\end_inset

 remains unchanged and the degree of 
\begin_inset Formula $x_{1}$
\end_inset

 and 
\begin_inset Formula $x_{2}$
\end_inset

 is three, 
\begin_inset Formula $X_{1}\ast X_{2}$
\end_inset

 has still valence three.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename Graphs/trivalent-connect-aut.eps
	width 80text%

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:trivalent-connect-aut"

\end_inset

The graph 
\begin_inset Formula $X_{1}\ast X_{2}$
\end_inset

, with 
\begin_inset Formula $X_{1}$
\end_inset

 being on the left and 
\begin_inset Formula $X_{2}$
\end_inset

 on the right.
 Untouched edges of 
\begin_inset Formula $X_{1}$
\end_inset

 and 
\begin_inset Formula $X_{2}$
\end_inset

 are dashed, new edges are painted solid.
 The two new nodes are shown as squares, whereas previously existing nodes
 are shown as disks.
 The edges drawn as dotted lines have been removed from the graph.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Although 
\begin_inset Formula $X_{1}\ast X_{2}$
\end_inset

 depends on the choice of 
\begin_inset Formula $e_{1}$
\end_inset

 and 
\begin_inset Formula $e_{2}$
\end_inset

, all presented results does not depend on the choice of 
\begin_inset Formula $e_{1}$
\end_inset

 and 
\begin_inset Formula $e_{2}$
\end_inset

.
 We therefore omit this dependency in our formal notation.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:equiv-auto-isomorphism"

\end_inset

Two graphs 
\begin_inset Formula $X_{1}=(V_{1},E_{1})$
\end_inset

 and 
\begin_inset Formula $X_{2}=(V_{2},E_{2})$
\end_inset

 are isomorphic if and only if there is an automorphism of 
\begin_inset Formula $X_{1}\ast X_{2}$
\end_inset

 that transposes 
\begin_inset Formula $x_{1}x_{2}$
\end_inset

, where 
\begin_inset Formula $x_{1}$
\end_inset

 and 
\begin_inset Formula $x_{2}$
\end_inset

 are the two newly added nodes of 
\begin_inset Formula $X_{1}\ast X_{2}$
\end_inset

.
\end_layout

\begin_layout Proof
Let 
\begin_inset Formula $\sigma:X_{1}\to X_{2}$
\end_inset

 be an isomorphism.
 Then 
\begin_inset Formula $\widetilde{\sigma}:(X_{1}\ast X_{2})\to(X_{1}\ast X_{2}),$
\end_inset


\begin_inset Formula 
\[
x\mapsto\widetilde{\sigma}(x)=\begin{cases}
\sigma(x) & x\notin\{x_{1},x_{2}\}\\
x_{1} & x=x_{2}\\
x_{2} & x=x_{1}
\end{cases}
\]

\end_inset

is an automorphism on 
\begin_inset Formula $(X_{1}\ast X_{2})$
\end_inset

 that transposes 
\begin_inset Formula $x_{1}x_{2}$
\end_inset

.
 Notice that any node in 
\begin_inset Formula $(X_{1}\ast X_{2})\cap X_{1}$
\end_inset

 is mapped to 
\begin_inset Formula $X_{2}$
\end_inset

 and vice versa.
\end_layout

\begin_layout Proof
Let 
\begin_inset Formula $\sigma$
\end_inset

 be an automorphism on 
\begin_inset Formula $(X_{1}\ast X_{2})$
\end_inset

 that transposes 
\begin_inset Formula $x_{1}x_{2}$
\end_inset

, that is, we have 
\begin_inset Formula $\sigma(x_{1})=x_{2}$
\end_inset

 and 
\begin_inset Formula $\sigma(x_{2})=x_{1}$
\end_inset

.
 Since the automorphism preserves edge relations, any neighbor of 
\begin_inset Formula $x_{1}$
\end_inset

 (except for 
\begin_inset Formula $x_{2}$
\end_inset

) is mapped to some node in 
\begin_inset Formula $X_{2}$
\end_inset

.
 By induction, 
\begin_inset Formula $\sigma$
\end_inset

 not only transposes 
\begin_inset Formula $x_{1}x_{2}$
\end_inset

 but switches the connected components of 
\begin_inset Formula $X_{1}\ast X_{2}-x_{1}x_{2}$
\end_inset

.
 Therefore, 
\begin_inset Formula $\sigma|_{X_{1}}$
\end_inset

 is a one-to-one mapping onto 
\begin_inset Formula $X_{2}$
\end_inset

 and 
\begin_inset Formula $X_{1}$
\end_inset

 and 
\begin_inset Formula $X_{2}$
\end_inset

 are isomorphic.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:equiv-automorph-generator"

\end_inset

Let 
\begin_inset Formula $X_{1}$
\end_inset

, 
\begin_inset Formula $X_{2}$
\end_inset

 be two graphs, 
\begin_inset Formula $x_{1}$
\end_inset

, 
\begin_inset Formula $x_{2}$
\end_inset

 be the added nodes in 
\begin_inset Formula $X_{1}\ast X_{2}$
\end_inset

 and let 
\begin_inset Formula $e=x_{1}x_{2}\in E(X_{1}\ast X_{2})$
\end_inset

.
 If there is an automorphism transposing 
\begin_inset Formula $x_{1}$
\end_inset

 and 
\begin_inset Formula $x_{2}$
\end_inset

, then any set of generators for 
\begin_inset Formula $\Aut_{e}(X)$
\end_inset

 will contain one.
\end_layout

\begin_layout Proof
We will proof the contrapositive.
 Let 
\begin_inset Formula $G$
\end_inset

 be a generating set of 
\begin_inset Formula $\Aut_{e}(X_{1}\ast X_{2})$
\end_inset

 that does not contain an automorphism transposing 
\begin_inset Formula $x_{1}$
\end_inset

 and 
\begin_inset Formula $x_{2}$
\end_inset

.
 Then for any 
\begin_inset Formula $g\in G$
\end_inset

, we have 
\begin_inset Formula $g(x_{1})=x_{1}$
\end_inset

.
 As 
\begin_inset Formula $G$
\end_inset

 is a generating set, for any 
\begin_inset Formula $\sigma\in\Aut_{e}(X)$
\end_inset

 there is a finite composition of 
\begin_inset Formula $g_{1},...,g_{n}\in G\cup G^{-1}$
\end_inset

 with 
\begin_inset Formula $g_{1}\circ...\circ g_{n}^{}=\sigma$
\end_inset

.
 This yields 
\begin_inset Formula $\sigma(x_{1})=(g_{1}\circ...\circ g_{n})(x_{1})=x_{1}$
\end_inset

.
 Thus, there is no automorphism transposing 
\begin_inset Formula $x_{1}$
\end_inset

 and 
\begin_inset Formula $x_{2}$
\end_inset

.
\end_layout

\begin_layout Standard
Using this, we can go ahead and proof Theorem 
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:gi-trivalent-graphs-reduceto-automorphism-generator-trivalent-graphs"

\end_inset

 by stating a polynomial time reduction.
 As a reminder, Theorem 
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:gi-trivalent-graphs-reduceto-automorphism-generator-trivalent-graphs"

\end_inset

 states that the problem of deciding whether two trivalent graphs are isomorphic
 is polynomial time reducible to the problem of finding a generating set
 for 
\begin_inset Formula $\Aut_{e}(X)$
\end_inset

, where 
\begin_inset Formula $e$
\end_inset

 is a fixed edge in the trivalent graph 
\begin_inset Formula $X$
\end_inset

.
\end_layout

\begin_layout Proof
\begin_inset Argument
status open

\begin_layout Plain Layout
Proof of Theorem 
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:gi-trivalent-graphs-reduceto-automorphism-generator-trivalent-graphs"

\end_inset


\end_layout

\end_inset

Assume we have an algorithm 
\begin_inset Formula $M$
\end_inset

 that determines a generating set for 
\begin_inset Formula $\Aut_{e}(X)$
\end_inset

 for any trivalent graph 
\begin_inset Formula $X$
\end_inset

.
 Let 
\begin_inset Formula $X'$
\end_inset

 and 
\begin_inset Formula $X'$
\end_inset

 be two connected trivalent graphs.
 Constructing 
\begin_inset Formula $X'\ast X''$
\end_inset

 involves adding and removing a constant number of edges and nodes and can
 thus be done in polynomial time.
 Combining Lemmas 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:equiv-auto-isomorphism"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:equiv-automorph-generator"

\end_inset

, 
\begin_inset Formula $X'$
\end_inset

 and 
\begin_inset Formula $X''$
\end_inset

 are isomorphic if and only if the generating set returned by 
\begin_inset Formula $M$
\end_inset

 on input 
\begin_inset Formula $X'\ast X''$
\end_inset

 contains an automorphism transposing the edge 
\begin_inset Formula $(x_{1},x_{2})$
\end_inset

.
 As the size of the generating set is bounded by 
\begin_inset Formula $\log_{2}|Aut_{e}(X'\ast X'')|$
\end_inset

 by Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:group-size-representation"

\end_inset

 with 
\begin_inset Formula $|\Aut_{e}(X'\ast X'')|$
\end_inset

 being of exponential size in the input length 
\begin_inset Formula $|(X',X'')|$
\end_inset

, we can verify this condition in polynomial time.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
shouldn't this be a reduction from a decision problem to a decision problem?
 ...
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sub:valence-3-second-red"

\end_inset

Reduction to the Color Automorphism Problem for 2-groups
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $X$
\end_inset

 be a connected trivalent simple graph with 
\begin_inset Formula $n$
\end_inset

 edges and 
\begin_inset Formula $e=(v_{1},v_{2})\in E(X)$
\end_inset

 be a distinguished edge.
 Let 
\begin_inset Formula $M$
\end_inset

 be an algorithm that, given a colored set 
\begin_inset Formula $A$
\end_inset

 and a set of generators for a 2-subgroup 
\begin_inset Formula $G$
\end_inset

 of 
\begin_inset Formula $\Sym A$
\end_inset

, finds a generating set for the biggest color-preserving subgroup of 
\begin_inset Formula $G$
\end_inset

.
 We will show that we can determine a generating set for 
\begin_inset Formula $\Aut_{e}(X)$
\end_inset

 in polynomial time using polynomial-many calls to 
\begin_inset Formula $M$
\end_inset

.
\end_layout

\begin_layout Definition
For 
\begin_inset Formula $r\in\{1,...,n\}$
\end_inset

, let 
\begin_inset Formula $X_{r}$
\end_inset

 be the subgraph of 
\begin_inset Formula $X$
\end_inset

 consisting of all edges and nodes that appear on paths of length up to
 
\begin_inset Formula $r$
\end_inset

 through 
\begin_inset Formula $e$
\end_inset

.
 Let 
\begin_inset Formula $\pi_{r}:\Aut_{e}(X_{r+1})\to\Aut_{e}(X_{r})$
\end_inset

 be defined by 
\begin_inset Formula $\sigma\mapsto\sigma|_{X_{r}}$
\end_inset

, the restriction of 
\begin_inset Formula $\sigma$
\end_inset

 to 
\begin_inset Formula $X_{r}$
\end_inset

.
 Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:automorphism-restriction"

\end_inset

 will show that for any 
\begin_inset Formula $\sigma$
\end_inset

, we have 
\begin_inset Formula $\pi_{r}(\sigma)\in\Aut_{e}(X_{r})$
\end_inset

.
 
\end_layout

\begin_layout Standard
We obtain that 
\begin_inset Formula $X_{1}=(\{v_{1},v_{2}\},\{(v_{1},v_{2})\})$
\end_inset

, since there is only one path of length one through 
\begin_inset Formula $e$
\end_inset

.
 Furthermore, it is 
\begin_inset Formula $X_{n}=X$
\end_inset

, since the distance from 
\begin_inset Formula $e$
\end_inset

 to any node in 
\begin_inset Formula $X$
\end_inset

 is less or equal to 
\begin_inset Formula $n$
\end_inset

.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:determine-aut-r1"

\end_inset

For an graph 
\begin_inset Formula $X$
\end_inset

 and an edge 
\begin_inset Formula $e$
\end_inset

 we have 
\begin_inset Formula $\Aut_{e}(X_{1})=\{\sigma,\tau\}$
\end_inset

 with 
\begin_inset Formula $\sigma$
\end_inset

 being the identity function and 
\begin_inset Formula $\tau$
\end_inset

 transposing the two vertices of 
\begin_inset Formula $X_{1}$
\end_inset

.
\end_layout

\begin_layout Proof
As mentioned before, 
\begin_inset Formula $X_{1}$
\end_inset

 is the graph consisting of all edges and nodes appearing of paths of length
 one through 
\begin_inset Formula $e$
\end_inset

 and is thus only 
\begin_inset Formula $e$
\end_inset

 itself.
 There are only two bijections of two elements, and both turn out to be
 an automorphism on 
\begin_inset Formula $X_{1}$
\end_inset

.
 Therefore, 
\begin_inset Formula $\Aut_{e}(X_{1})=\{\sigma,\tau\}$
\end_inset

.
\end_layout

\begin_layout Lemma
The function 
\begin_inset Formula $\pi_{r}$
\end_inset

, the restriction of automorphisms in 
\begin_inset Formula $\Aut_{e}(X_{r+r})$
\end_inset

 to 
\begin_inset Formula $X_{r}$
\end_inset

, is a group homomorphism.
\end_layout

\begin_layout Proof
Let 
\begin_inset Formula $\sigma,\tau\in\Aut_{e}(X_{r+1})$
\end_inset

.
 As 
\begin_inset Formula $\sigma\circ\tau$
\end_inset

 is a automorphism on 
\begin_inset Formula $X_{r+1}$
\end_inset

 that fixes edge 
\begin_inset Formula $e$
\end_inset

, the restriction to 
\begin_inset Formula $V(X_{r})$
\end_inset

 yields an automorphism in 
\begin_inset Formula $\Aut(X_{r})$
\end_inset

.
 We thus obtain 
\begin_inset Formula $\pi_{r}(\sigma\circ\tau)=(\sigma\circ\tau)|_{X_{r}}=(\sigma|_{X_{r}}\circ\tau|_{X_{r}})=\pi_{r}(\sigma)\circ\pi_{r}(\tau)$
\end_inset

.
\end_layout

\begin_layout Standard
This shows that the layered structure of 
\begin_inset Formula $X_{1},...,X_{r}$
\end_inset

 is reflected in the automorphism groups 
\begin_inset Formula $\Aut_{e}(X_{1}),...,\Aut_{e}(X_{r})$
\end_inset

 and can be connected by the group homomorphism 
\begin_inset Formula $\pi_{r}$
\end_inset

.
 To get some more insight on the layer structure, we will have a closer
 look on the new nodes that are added with each layer.
\end_layout

\begin_layout Definition
For any node 
\begin_inset Formula $v\in V(X_{r+1})\setminus V(X_{r})$
\end_inset

, we define 
\begin_inset Formula $f(v)$
\end_inset

 to be the set of all neighbors of 
\begin_inset Formula $v$
\end_inset

 in 
\begin_inset Formula $V(X_{r})$
\end_inset

.
 That is, 
\begin_inset Formula $f$
\end_inset

 is a function that maps nodes in 
\begin_inset Formula $V(X_{r+1})\setminus V(X_{r})$
\end_inset

 to 
\begin_inset Formula $A$
\end_inset

, with 
\begin_inset Formula $A$
\end_inset

 being the set of all 1-, 2- and 3-subsets of 
\begin_inset Formula $V(X_{r})$
\end_inset

.
 (There is no node in 
\begin_inset Formula $X_{r+1}\setminus X_{r}$
\end_inset

 that has no neighbor, because of the way the graph is constructed.
 There is no node with more than three neighbors, because valence is bounded
 by 3.
 Also notice that 
\begin_inset Formula $X_{r+1}$
\end_inset

 does not contain edges in between nodes of 
\begin_inset Formula $X_{r+1}\setminus X_{r}$
\end_inset

, so 
\begin_inset Formula $f(v)\subseteq V(X_{r})$
\end_inset

.) Any two different nodes 
\begin_inset Formula $v_{1},v_{2}\in V(X_{r+1})\setminus V(X_{r})$
\end_inset

 are called 
\emph on
twins
\emph default
, if 
\begin_inset Formula $f(v_{1})=f(v_{2})$
\end_inset

.
\end_layout

\begin_layout Standard
If 
\begin_inset Formula $v_{1}$
\end_inset

 and 
\begin_inset Formula $v_{2}$
\end_inset

 are twins, there is no 
\begin_inset Formula $v_{3}$
\end_inset

 that is a twin to 
\begin_inset Formula $v_{1}$
\end_inset

 or 
\begin_inset Formula $v_{2}$
\end_inset

, which we prove by contradiction: assume 
\begin_inset Formula $v_{1},v_{2},v_{3}\in V(X_{r+1})\setminus V(X_{r})$
\end_inset

 are (pair-wise) twins.
 Then there is at least one node 
\begin_inset Formula $w$
\end_inset

 in 
\begin_inset Formula $X_{r}$
\end_inset

 that is adjacent to all three nodes.
 However, since 
\begin_inset Formula $w$
\end_inset

 is part of 
\begin_inset Formula $X_{r}$
\end_inset

, for 
\begin_inset Formula $r\geq2$
\end_inset

, 
\begin_inset Formula $w$
\end_inset

 must be adjacent to a node in 
\begin_inset Formula $X_{r-1}$
\end_inset

.
 For 
\begin_inset Formula $r=1$
\end_inset

, 
\begin_inset Formula $w$
\end_inset

 is either 
\begin_inset Formula $e_{1}$
\end_inset

 or 
\begin_inset Formula $e_{2}$
\end_inset

.
 In both cases, 
\begin_inset Formula $w$
\end_inset

 has degree four, which contradicts the assumption of 
\begin_inset Formula $X$
\end_inset

 being a trivalent graph.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:swtich-sigma-f"

\end_inset

For any 
\begin_inset Formula $\sigma\in\Aut_{e}(X_{r+1})$
\end_inset

 and any 
\begin_inset Formula $v\in V(X_{r+1})\setminus V(X_{r})$
\end_inset

, it holds that 
\begin_inset Formula $f(\sigma(v))=\sigma(f(v))$
\end_inset

.
\end_layout

\begin_layout Proof
Let 
\begin_inset Formula $x\in f(\sigma(v))$
\end_inset

.
 Then 
\begin_inset Formula $x\in V(X_{r})$
\end_inset

 and 
\begin_inset Formula $x$
\end_inset

 is adjacent to 
\begin_inset Formula $\sigma(v)$
\end_inset

.
 Then 
\begin_inset Formula $\sigma^{-1}(x)\in V(X_{r})$
\end_inset

 is adjacent to 
\begin_inset Formula $v$
\end_inset

.
 Therefore, 
\begin_inset Formula $\sigma^{-1}(x)\in f(v)$
\end_inset

 and hence 
\begin_inset Formula $x\in\sigma(f(v))$
\end_inset

.
\end_layout

\begin_layout Proof
Now let 
\begin_inset Formula $x\in\sigma(f(v))$
\end_inset

.
 Then 
\begin_inset Formula $\sigma^{-1}(x)\in f(v)$
\end_inset

, that is, 
\begin_inset Formula $\sigma^{-1}(x)$
\end_inset

 is adjacent to 
\begin_inset Formula $v$
\end_inset

.
 Therefore, 
\begin_inset Formula $x$
\end_inset

 is adjacent to 
\begin_inset Formula $\sigma(v)$
\end_inset

 and thus 
\begin_inset Formula $x\in f(\sigma(v))$
\end_inset

.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:determine-aut-kernel"

\end_inset

A set of generators for 
\begin_inset Formula $\Ker\pi_{r}$
\end_inset

 can be determined in polynomial time.
 The set of generators contains only elements of order 2.
\end_layout

\begin_layout Proof
Let 
\begin_inset Formula $\sigma\in\Aut_{e}(X_{r+1})$
\end_inset

.
 If 
\begin_inset Formula $\sigma\in\Ker\pi_{r}$
\end_inset

, that is, 
\begin_inset Formula $\sigma$
\end_inset

 fixes all nodes of 
\begin_inset Formula $X_{r}$
\end_inset

, we have 
\begin_inset Formula $f(\sigma(v))=f(v)$
\end_inset

, since 
\begin_inset Formula $f(v)\subseteq V(X_{r})$
\end_inset

 for every node 
\begin_inset Formula $v$
\end_inset

 in 
\begin_inset Formula $X_{r+1}$
\end_inset

 by definition.
 It follows that either 
\begin_inset Formula $\sigma(v)=v$
\end_inset

 or 
\begin_inset Formula $\sigma(v)$
\end_inset

 and 
\begin_inset Formula $v$
\end_inset

 are twins.
 Since 
\begin_inset Formula $\sigma$
\end_inset

 preserves neighborhoods, 
\begin_inset Formula $\sigma$
\end_inset

 either maps 
\begin_inset Formula $v$
\end_inset

 to itself or transposes 
\begin_inset Formula $\sigma(v)$
\end_inset

 and 
\begin_inset Formula $v$
\end_inset

.
\begin_inset Formula $\Ker\pi_{r}$
\end_inset

 is thus generated by the transpositions of each pair of twins.
 Following the layered structure of 
\begin_inset Formula $X_{r}$
\end_inset

, we can determine all pairs of twins in polynomial time: For each layer
 in 
\begin_inset Formula $r\in1,...,n-1$
\end_inset

, we determine the neighborhoods of all vertices in 
\begin_inset Formula $X_{r+1}\setminus X_{r}$
\end_inset

.
 For every pair of twins, we add the transposition to the generator.
\end_layout

\begin_layout Corollary
\begin_inset CommandInset label
LatexCommand label
name "cor:aut-e-Xr-is-a-2-group"

\end_inset

For each 
\begin_inset Formula $r$
\end_inset

, 
\begin_inset Formula $\Aut_{e}(X_{r})$
\end_inset

 is a 2-group.
\end_layout

\begin_layout Proof
By Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:determine-aut-kernel"

\end_inset

, every 
\begin_inset Formula $g_{i}$
\end_inset

 in the generator 
\begin_inset Formula $\langle g_{1},...,g_{k}\rangle$
\end_inset

 has order two.
 Thus all linear combinations of the 
\begin_inset Formula $g_{i}$
\end_inset

 can be expressed as 
\begin_inset Formula $g_{1}^{\alpha_{1}}\cdot...\cdot g_{k}^{\alpha_{k}}$
\end_inset

 with 
\begin_inset Formula $\alpha_{i}\in\{0,1\}$
\end_inset

.
 Different linear combinations cannot result into the same automorphism
 since all 
\begin_inset Formula $g_{i}$
\end_inset

 transpose different twins and triplets do not exist.
 This yields a total of 
\begin_inset Formula $2^{k}=|\langle g_{1},...,g_{k}\rangle|$
\end_inset

 combinations.
 
\end_layout

\begin_layout Standard
A closer look at the layered structure of the graphs 
\begin_inset Formula $X_{1},...,X_{r}$
\end_inset

 will unveil a way to find generators for 
\begin_inset Formula $\Img\pi_{r}$
\end_inset

.
 To do that, we fix a layer 
\begin_inset Formula $r$
\end_inset

 for the following theorems and assume by Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:determine-aut-r1"

\end_inset

 and induction, we know a generating set for 
\begin_inset Formula $\Aut_{e}(X_{r-1})$
\end_inset

.
 Using 
\begin_inset Formula $f$
\end_inset

, we will divide the set 
\begin_inset Formula $A$
\end_inset

 of all 1-, 2- and 3-subsets of 
\begin_inset Formula $V(X_{r})$
\end_inset

 into three disjoint subsets 
\begin_inset Formula $A_{1}$
\end_inset

, 
\begin_inset Formula $A_{2}$
\end_inset

 and 
\begin_inset Formula $A_{0}=A\setminus(A_{1}\cup A_{2})$
\end_inset

.
\end_layout

\begin_layout Definition
Let 
\begin_inset Formula $A_{1}$
\end_inset

 be the set of all 1-, 2- and 3-subsets 
\begin_inset Formula $a$
\end_inset

 of 
\begin_inset Formula $V(X_{r})$
\end_inset

 for which there is only one unique 
\begin_inset Formula $v\in V(X_{r+1})\setminus V(X_{r})$
\end_inset

 with 
\begin_inset Formula $f(v)=a$
\end_inset

.
 Furthermore, let 
\begin_inset Formula $A_{2}$
\end_inset

 be the set of all 1-, 2- and 3-subsets 
\begin_inset Formula $a$
\end_inset

 that are adjacent to twins, i.e.
 all 
\begin_inset Formula $a\in A$
\end_inset

 such that 
\begin_inset Formula $a=f(v_{1})=f(v_{2})$
\end_inset

 for some 
\begin_inset Formula $v_{1},v_{2}\in V(X_{r+1})\setminus V(X_{r})$
\end_inset

, 
\begin_inset Formula $v_{1}\neq v_{2}$
\end_inset

.
 Finally, let 
\begin_inset Formula $A'$
\end_inset

 be the set all 2-subsets of 
\begin_inset Formula $V(X_{r})$
\end_inset

 that are, in 
\begin_inset Formula $X_{r+1}$
\end_inset

, adjacent to each other.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:imgpir-stabilizes-as"

\end_inset

Any member of 
\begin_inset Formula $\Img\pi_{r}$
\end_inset

 stabilizes 
\begin_inset Formula $A_{1}$
\end_inset

, 
\begin_inset Formula $A_{2}$
\end_inset

 and 
\begin_inset Formula $A'$
\end_inset

.
\end_layout

\begin_layout Proof
Let 
\begin_inset Formula $\tau\in\Img\pi_{r}$
\end_inset

, and let 
\begin_inset Formula $\sigma\in\Aut_{e}(X_{r+1})$
\end_inset

 such that 
\begin_inset Formula $\pi_{r}(\sigma)=\tau.$
\end_inset

 Notice that for every node 
\begin_inset Formula $v$
\end_inset

 in 
\begin_inset Formula $X_{r}$
\end_inset

 we have 
\begin_inset Formula $\tau(v)=\sigma(v)$
\end_inset

.
\end_layout

\begin_layout Proof
Let 
\begin_inset Formula $a\in A_{1}$
\end_inset

.
 We will show that 
\begin_inset Formula $\tau(a)=\sigma(a)$
\end_inset

 is a member of 
\begin_inset Formula $A_{1}$
\end_inset

 as well.
 Suppose 
\begin_inset Formula $w$
\end_inset

 and 
\begin_inset Formula $w'$
\end_inset

 are nodes in 
\begin_inset Formula $X_{r+1}\setminus X_{r}$
\end_inset

 such that 
\begin_inset Formula $f(w)=f(w')=\sigma(a)$
\end_inset

.
 We will show that in this case, we always have 
\begin_inset Formula $w=w'$
\end_inset

.
 There are 
\begin_inset Formula $v,v'\in V(X_{r+1})\setminus V(X_{r})$
\end_inset

 such that 
\begin_inset Formula $f(\sigma(v))=f(\sigma(v'))=\sigma(a)$
\end_inset

.
 Applying Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:swtich-sigma-f"

\end_inset

, we obtain 
\begin_inset Formula $\sigma(f(v))=\sigma(f(v'))=\sigma(a)$
\end_inset

 and therefore 
\begin_inset Formula $f(v)=f(v')=a$
\end_inset

.
 Since 
\begin_inset Formula $a\in A_{1}$
\end_inset

, it holds that 
\begin_inset Formula $v=v'$
\end_inset

 and 
\begin_inset Formula $w=w'$
\end_inset

.
 Hence, 
\begin_inset Formula $\sigma(a)=\tau(a)\in A_{1}$
\end_inset

 and 
\begin_inset Formula $\tau$
\end_inset

 stabilizes 
\begin_inset Formula $A_{1}$
\end_inset

.
\end_layout

\begin_layout Proof
Let 
\begin_inset Formula $a\in A_{2}$
\end_inset

.
 We are going to prove that 
\begin_inset Formula $\tau(a)$
\end_inset

 belongs to 
\begin_inset Formula $A_{2}$
\end_inset

.
 Since 
\begin_inset Formula $a\in A_{2}$
\end_inset

, there are 
\begin_inset Formula $v_{1},v_{2}\in V(X_{r+1})\setminus V(X_{r})$
\end_inset

 such that 
\begin_inset Formula $f(v_{1})=f(v_{2})=a$
\end_inset

 and 
\begin_inset Formula $v_{1}\neq v_{2}$
\end_inset

.
 Hence, 
\begin_inset Formula $\sigma(f(v_{1}))=\sigma(f(v_{2}))=\sigma(a)$
\end_inset

 and by Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:swtich-sigma-f"

\end_inset

 
\begin_inset Formula $f(\sigma(v_{1}))=f(\sigma(v_{2}))=\sigma(a)$
\end_inset

 with 
\begin_inset Formula $\sigma(v_{1})\neq\sigma(v_{2})$
\end_inset

 and thus 
\begin_inset Formula $\sigma(a)=\tau(a)\in A_{2}$
\end_inset

.
 Therefore, 
\begin_inset Formula $\tau$
\end_inset

 stabilizes 
\begin_inset Formula $A_{2}$
\end_inset

.
\end_layout

\begin_layout Proof
Let 
\begin_inset Formula $a\in A'$
\end_inset

.
 Then 
\begin_inset Formula $a=\{v_{1},v_{2}\}$
\end_inset

 such that 
\begin_inset Formula $(v_{1},v_{2})\in E(X_{r+1})$
\end_inset

.
 Notice that, by definition of 
\begin_inset Formula $A$
\end_inset

, 
\begin_inset Formula $v_{1},v_{2}\in V(X_{r})$
\end_inset

.
 As 
\begin_inset Formula $\sigma$
\end_inset

 preserves edge relations in 
\begin_inset Formula $X_{r+1}$
\end_inset

, 
\begin_inset Formula $(\sigma(v_{1}),\sigma(v_{2}))=(\tau(v_{1}),\tau(v_{2}))\in E(X_{r+1})$
\end_inset

 and therefore 
\begin_inset Formula $\tau(a)\in A'$
\end_inset

.
 Thus, 
\begin_inset Formula $\tau$
\end_inset

 stabilizes 
\begin_inset Formula $A'$
\end_inset

.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:stabilizes-as-imgpir"

\end_inset

Any 
\begin_inset Formula $\tau\in\Aut_{e}(X_{r})$
\end_inset

, that stabilizes 
\begin_inset Formula $A_{1},$
\end_inset

 
\begin_inset Formula $A_{2}$
\end_inset

 and 
\begin_inset Formula $A'$
\end_inset

 is a member of 
\begin_inset Formula $\Img\pi_{r}$
\end_inset

.
\end_layout

\begin_layout Proof
We show that 
\begin_inset Formula $\tau$
\end_inset

 can be extended to an automorphism 
\begin_inset Formula $\sigma\in\Aut_{e}(X_{r+1})$
\end_inset

.
 Let 
\begin_inset Formula $\sigma|_{X_{r}}=\tau$
\end_inset

, definitions for 
\begin_inset Formula $\sigma(v)$
\end_inset

 with 
\begin_inset Formula $v$
\end_inset

 being a node of 
\begin_inset Formula $X_{r+1}\setminus X_{r}$
\end_inset

 follow below.
 
\end_layout

\begin_layout Proof
For any 
\begin_inset Formula $v\in V(X_{r+1})\setminus V(X_{r})$
\end_inset

 with 
\begin_inset Formula $f(v)\in A_{1}$
\end_inset

 we have 
\begin_inset Formula $\tau(f(v))\in A_{1}$
\end_inset

, since 
\begin_inset Formula $\tau$
\end_inset

 stabilizes 
\begin_inset Formula $A_{1}$
\end_inset

.
 As 
\begin_inset Formula $\tau(f(v))\in A_{1}$
\end_inset

, there is a uniquely determined 
\begin_inset Formula $w$
\end_inset

 such that 
\begin_inset Formula $f(w)=\tau(f(v))$
\end_inset

.
 Therefore, we define 
\begin_inset Formula $\sigma(v)=w$
\end_inset

.
 Since any neighbor of 
\begin_inset Formula $v$
\end_inset

 is a member of 
\begin_inset Formula $f(v)$
\end_inset

 and any neighbor of 
\begin_inset Formula $w$
\end_inset

 lies in 
\begin_inset Formula $f(w)=\tau(f(v))$
\end_inset

, this extension of 
\begin_inset Formula $\tau$
\end_inset

 preserves edge relations.
\end_layout

\begin_layout Proof
For any 
\begin_inset Formula $v_{1},v_{2}\in V(X_{r+1})\setminus V(X_{r})$
\end_inset

 with 
\begin_inset Formula $a:=f(v_{1})=f(v_{2})\in A_{2}$
\end_inset

, it holds that 
\begin_inset Formula $\tau(a)\in A_{2}$
\end_inset

, since 
\begin_inset Formula $\tau$
\end_inset

 stabilizes 
\begin_inset Formula $A_{2}$
\end_inset

.
 Similar to the mapping of 
\begin_inset Formula $A_{1}$
\end_inset

, there are two nodes 
\begin_inset Formula $w_{1},w_{2}\in V(X_{r+1})\setminus V(X_{r})$
\end_inset

 such that 
\begin_inset Formula $f(w_{1})=f(w_{2})=\tau(a)$
\end_inset

.
 We define 
\begin_inset Formula $\sigma(v_{1})=w_{1}$
\end_inset

 and 
\begin_inset Formula $\sigma(v_{2})=w_{2}$
\end_inset

.
 This preserves edge relations, as for 
\begin_inset Formula $i\in\{1,2\}$
\end_inset

 we have 
\begin_inset Formula $f(w_{i})=\tau(a)$
\end_inset

.
\end_layout

\begin_layout Proof
This yields an automorphism 
\begin_inset Formula $\sigma\in\Aut_{e}(X_{r+1})$
\end_inset

.
 Therefore, 
\begin_inset Formula $\tau\in\Img\pi_{r}$
\end_inset

.
\end_layout

\begin_layout Corollary
\begin_inset CommandInset label
LatexCommand label
name "cor:determine-aut-image"

\end_inset

Given a set of generators for 
\begin_inset Formula $\Aut_{e}(X_{r})$
\end_inset

, a set of generators for 
\begin_inset Formula $\Img\pi_{r}$
\end_inset

 can be determined in polynomial time, using one call to 
\begin_inset Formula $M$
\end_inset

.
\end_layout

\begin_layout Proof
Let 
\begin_inset Formula $H$
\end_inset

 be a set of generators for 
\begin_inset Formula $\Aut_{e}(X_{r})$
\end_inset

.
\end_layout

\begin_layout Proof
Let 
\begin_inset Formula $M$
\end_inset

 be an algorithm that finds the biggest color-preserving subgroup of 
\begin_inset Formula $G$
\end_inset

, where 
\begin_inset Formula $G\leq\Sym A$
\end_inset

 is a 2-group and 
\begin_inset Formula $A$
\end_inset

 is a colored set.
 We color 
\begin_inset Formula $A$
\end_inset

 with six colors to distinguish the partitions 
\begin_inset Formula 
\[
A_{0}\cap A',\quad A_{1}\cap A',\quad A_{2}\cap A',\quad A_{0}\setminus A',\quad A_{1}\setminus A',\quad A_{2}\setminus A',
\]

\end_inset


\end_layout

\begin_layout Proof
with 
\begin_inset Formula $A_{0}=A\setminus(A_{1}\cup A_{2})$
\end_inset

 as shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:The-six-partitions"

\end_inset

.
 
\end_layout

\begin_layout Proof
By Corollary 
\begin_inset CommandInset ref
LatexCommand ref
reference "cor:aut-e-Xr-is-a-2-group"

\end_inset

 we know that 
\begin_inset Formula $\Aut_{e}(X_{r})$
\end_inset

 is a 2-subgroup of 
\begin_inset Formula $\Sym A$
\end_inset

.
 Combining Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:imgpir-stabilizes-as"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:stabilizes-as-imgpir"

\end_inset

, we know that 
\begin_inset Formula $\Img\pi_{r}$
\end_inset

 is exactly the group of all automorphisms in 
\begin_inset Formula $\Aut_{e}(X_{r})$
\end_inset

 that stabilize the sets 
\begin_inset Formula $A_{1}$
\end_inset

, 
\begin_inset Formula $A_{2}$
\end_inset

 and 
\begin_inset Formula $A'$
\end_inset

.
 Hence, it also stabilizes 
\begin_inset Formula $A_{0}$
\end_inset

 and thus all six partitions.
 Vice versa, any automorphism 
\begin_inset Formula $\sigma$
\end_inset

 that stabilizes all six partitions, also stabilizes 
\begin_inset Formula $A_{1}$
\end_inset

, 
\begin_inset Formula $A_{2}$
\end_inset

 and 
\begin_inset Formula $A'$
\end_inset

, and therefore 
\begin_inset Formula $\sigma\in\Img\pi_{r}$
\end_inset

.
 We can conclude that the set of all stabilizing automorphisms (with respect
 to the six partitions above) in 
\begin_inset Formula $\Aut_{e}(X_{r})$
\end_inset

 is exactly 
\begin_inset Formula $\Img\pi_{r}$
\end_inset

.
\end_layout

\begin_layout Proof
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename Drawings/venn-color-presering-partitions.eps
	width 50text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:The-six-partitions"

\end_inset

The six partitions of 
\begin_inset Formula $A$
\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Proof
This enables us to use algorithm 
\begin_inset Formula $M$
\end_inset

 on the above coloring of 
\begin_inset Formula $A$
\end_inset

 and the generating set 
\begin_inset Formula $H$
\end_inset

 of 
\begin_inset Formula $\Aut_{e}(X_{r})$
\end_inset

 to find a generating set of 
\begin_inset Formula $\Img\pi_{r}$
\end_inset

 in polynomial time.
\end_layout

\begin_layout Corollary
\begin_inset CommandInset label
LatexCommand label
name "cor:determine-aut-r-plus-1"

\end_inset

Given a set of generators for 
\begin_inset Formula $\Aut_{e}(X_{r})$
\end_inset

, we can determine a generating set for 
\begin_inset Formula $\Aut_{e}(X_{r+1})$
\end_inset

 in polynomial time with one call to 
\begin_inset Formula $M$
\end_inset

.
\end_layout

\begin_layout Proof
By Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:determine-aut-kernel"

\end_inset

, we can determine a generating set 
\begin_inset Formula $K$
\end_inset

 for 
\begin_inset Formula $\Ker\pi_{r}$
\end_inset

 in polynomial time and by Corollary 
\begin_inset CommandInset ref
LatexCommand ref
reference "cor:determine-aut-image"

\end_inset

, we can determine a generating set 
\begin_inset Formula $I'\subseteq\Aut_{e}(X_{r})$
\end_inset

 for 
\begin_inset Formula $\Img\pi_{r}$
\end_inset

 in polynomial time using one call to 
\begin_inset Formula $M$
\end_inset

.
 We can extend each automorphism in 
\begin_inset Formula $I'$
\end_inset

 using the identity function on any node in 
\begin_inset Formula $X_{r+1}\setminus X_{r}$
\end_inset

 and thus obtain the set 
\begin_inset Formula 
\[
I=\{\sigma'\mid\sigma'\text{ is \sigma\ \text{extended} with identity on all nodes in \ensuremath{X_{r+1}\setminus X_{r}\}}}.
\]

\end_inset

This yields 
\begin_inset Formula $f(I)=I'$
\end_inset

 and we can use Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:generating-set-kernel-image"

\end_inset

, to prove that 
\begin_inset Formula $K\cup I$
\end_inset

 generates 
\begin_inset Formula $\Aut_{e}(X_{r+1})$
\end_inset

.
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Proof
\begin_inset Argument
status open

\begin_layout Plain Layout
Proof of Theorem 
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:automorphism-generator-trivalent-graphs-reduceto-color-automorphism-2-groups"

\end_inset


\end_layout

\end_inset

 We know 
\begin_inset Formula $\Aut_{e}(X_{1})$
\end_inset

 by Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:determine-aut-r1"

\end_inset

.
 With 
\begin_inset Formula $|X|$
\end_inset

 iterations of Corollary 
\begin_inset CommandInset ref
LatexCommand ref
reference "cor:determine-aut-r-plus-1"

\end_inset

, we can obtain 
\begin_inset Formula $\Aut_{e}(X)$
\end_inset

 using polynomial time and 
\begin_inset Formula $|X|$
\end_inset

 calls to 
\begin_inset Formula $M$
\end_inset

.
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sub:valence-3-polytime-alg"

\end_inset

Solving the Color Automorphism Problem for 2-groups in polynomial time
\end_layout

\begin_layout Standard
The Graph Isomorphism Problem for graphs with valence bounded by three was
 reduced to the Color Automorphism Problem for 2-groups by Sections 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:valence-3-first-red"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:valence-3-second-red"

\end_inset

.
 This section will show that there is a polynomial time divide and conquer
 algorithm that can solve the Color Automorphism Problem.
 Ultimately, this will prove that we can solve the Graph Isomorphism Problem
 for graphs with valence bounded by three in polynomial time as stated in
 Corollary 
\begin_inset CommandInset ref
LatexCommand ref
reference "cor:gi-trivalent-graphs-polynomial-time"

\end_inset

.
\end_layout

\begin_layout Standard
To unveil the recursive structure of the problem, we need the notion of
 a 
\begin_inset Quotes eld
\end_inset

filter
\begin_inset Quotes erd
\end_inset

 for color-preserving elements from a set of permutations.
\end_layout

\begin_layout Definition
For a colored set 
\begin_inset Formula $A$
\end_inset

, a subset 
\begin_inset Formula $B\subseteq A$
\end_inset

 and 
\begin_inset Formula $K\subseteq\Sym(A)$
\end_inset

 we define 
\begin_inset Formula $C_{B}(K)=\{\sigma\in K\,|\,\text{for all }b\in B,\sigma(b)\sim b\}$
\end_inset

, where 
\begin_inset Formula $a\sim b$
\end_inset

 for 
\begin_inset Formula $a,b\in A$
\end_inset

 is true if and only if 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

 have the same color.
 We can think of 
\begin_inset Formula $C_{B}(K)$
\end_inset

 as all permutations in 
\begin_inset Formula $K$
\end_inset

 that preserve colors for all elements in 
\begin_inset Formula $B$
\end_inset

.
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $A$
\end_inset

 be a colored set.
 As stated in Definition 
\begin_inset CommandInset ref
LatexCommand ref
reference "def:trivalent-problems"

\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "pro:color-automorphism-2-groups"

\end_inset

), we need to give a polynomial-time algorithm that finds the biggest color-pres
erving subgroup of 
\begin_inset Formula $G$
\end_inset

, where 
\begin_inset Formula $G$
\end_inset

 is a 2-subgroup of 
\begin_inset Formula $\Sym(A)$
\end_inset

 given by a set of generators.
 That is, we need to find 
\begin_inset Formula $C_{A}(G)$
\end_inset

.
 We will prove in Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:CB-properties"

\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:CB-properties-subgroup"

\end_inset

) that 
\begin_inset Formula $C_{A}(G)$
\end_inset

 is indeed a group.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:CB-properties"

\end_inset

Let 
\begin_inset Formula $K,K'\subseteq\Sym(A)$
\end_inset

, 
\begin_inset Formula $B',B''\subseteq B$
\end_inset

 and let 
\begin_inset Formula $G$
\end_inset

 be a subgroup of 
\begin_inset Formula $\Sym(A)$
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset CommandInset label
LatexCommand label
name "lem:CB-properties-union"

\end_inset


\begin_inset Formula $C_{B}(K\cup K')=C_{B}(K)\cup C_{B}(K')$
\end_inset

.
\end_layout

\begin_layout Enumerate
\begin_inset CommandInset label
LatexCommand label
name "lem:CB-properties-composition"

\end_inset


\begin_inset Formula $C_{B'\cup B''}(K)=C_{B''}(C_{B'}(K))$
\end_inset

.
\end_layout

\begin_layout Enumerate
\begin_inset CommandInset label
LatexCommand label
name "lem:CB-properties-subgroup"

\end_inset

If 
\begin_inset Formula $G$
\end_inset

 stabilizes 
\begin_inset Formula $B$
\end_inset

, then 
\begin_inset Formula $C_{B}(G)$
\end_inset

 is a subgroup of 
\begin_inset Formula $G$
\end_inset

.
\end_layout

\begin_layout Enumerate
\begin_inset CommandInset label
LatexCommand label
name "lem:CB-properties-coset"

\end_inset

Let 
\begin_inset Formula $G$
\end_inset

 stabilize 
\begin_inset Formula $B$
\end_inset

.
 If 
\begin_inset Formula $C_{B}(\sigma G)$
\end_inset

 is not empty then it is a left coset of the subgroup 
\begin_inset Formula $C_{B}(G)$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Proof
\begin_inset ERT
status open

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
The color-preserving elements in 
\begin_inset Formula $K\cup K'$
\end_inset

 are exactly the color-preserving elements in 
\begin_inset Formula $K$
\end_inset

 plus the ones in 
\begin_inset Formula $K'$
\end_inset

.
\end_layout

\begin_layout Enumerate
Any 
\begin_inset Formula $\sigma\in K$
\end_inset

 that preserves color for all elements in 
\begin_inset Formula $B'$
\end_inset

 and 
\begin_inset Formula $B''$
\end_inset

 preserves the color for all elements in 
\begin_inset Formula $B'\cup B''$
\end_inset

, and vice versa.
\end_layout

\begin_layout Enumerate
For 
\begin_inset Formula $1\in\Sym(A)$
\end_inset

 we have 
\begin_inset Formula $1\in G$
\end_inset

, and 
\begin_inset Formula $1$
\end_inset

 preserves color, therefore 
\begin_inset Formula $1\in C_{B}(G)$
\end_inset

.
 For any two elements 
\begin_inset Formula $\sigma$
\end_inset

 and 
\begin_inset Formula $\tau$
\end_inset

 in 
\begin_inset Formula $G$
\end_inset

 that preserve color, 
\begin_inset Formula $\sigma\circ\tau$
\end_inset

 preserves color as well.
 
\begin_inset Formula $\sigma\circ\tau$
\end_inset

 is a permutation on 
\begin_inset Formula $B$
\end_inset

 because 
\begin_inset Formula $G$
\end_inset

 stabilizes 
\begin_inset Formula $B$
\end_inset

.
 If 
\begin_inset Formula $\sigma$
\end_inset

 preserves color on 
\begin_inset Formula $B$
\end_inset

, so does 
\begin_inset Formula $\sigma^{-1}$
\end_inset

 (otherwise, 
\begin_inset Formula $\sigma\circ\sigma^{-1}\neq1$
\end_inset

).
 
\end_layout

\begin_layout Enumerate
We just demonstrated that 
\begin_inset Formula $C_{B}(G)$
\end_inset

 is a subgroup of 
\begin_inset Formula $G$
\end_inset

.
\begin_inset Note Note
status open

\begin_layout Plain Layout
TODO
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
To allow recursive calls, the algorithm's input will be a set 
\begin_inset Formula $B\subset A$
\end_inset

 and a coset, represented by a 
\begin_inset Formula $\sigma\in\Sym A$
\end_inset

 and a generating set for a subgroup 
\begin_inset Formula $G$
\end_inset

.
 The algorithm will then find 
\begin_inset Formula $C_{B}(\sigma G)$
\end_inset

.
 By Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:CB-properties"

\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:CB-properties-coset"

\end_inset

), this is either empty or a coset as well.
 We can thus represent the output by a generator and an element of 
\begin_inset Formula $\Sym A$
\end_inset

.
 To use the algorithm to find 
\begin_inset Formula $C_{A}(G)$
\end_inset

, we will use 
\begin_inset Formula $A$
\end_inset

, 
\begin_inset Formula $1\in\Sym A$
\end_inset

 and a generating set for 
\begin_inset Formula $G$
\end_inset

 as input values.
\end_layout

\begin_layout Standard
Each recursive call of the algorithm will use two or four sub-calls to itself,
 using a (possibly) different coset and some 
\begin_inset Formula $B'\subsetneq B$
\end_inset

 as input.
 The smaller 
\begin_inset Formula $B'$
\end_inset

 guarantees the algorithm will terminate eventually, since for 
\begin_inset Formula $G$
\end_inset

-stable 
\begin_inset Formula $B$
\end_inset

 with 
\begin_inset Formula $|B|=1$
\end_inset

, 
\begin_inset Formula $B=\{b\}$
\end_inset

, we have 
\begin_inset Formula 
\[
C_{B}(\sigma G)=\begin{cases}
\sigma G & \text{if \ensuremath{\sigma(b)\sim b}},\\
\emptyset & \text{if \ensuremath{\sigma(b)\nsim b}.}
\end{cases}
\]

\end_inset

We will see later that 
\begin_inset Formula $B'$
\end_inset

 will actually be at most
\begin_inset Note Note
status open

\begin_layout Plain Layout
doublecheck
\end_layout

\end_inset

 half the size of 
\begin_inset Formula $B$
\end_inset

 in every recursive step.
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout Algorithm
* input: a set 
\begin_inset Formula $B\subseteq A$
\end_inset

, permutation 
\begin_inset Formula $\sigma$
\end_inset

, set of generators for 2-subgroup 
\begin_inset Formula $G\leq\Sym A$
\end_inset


\end_layout

\begin_layout Algorithm
* output: 
\begin_inset Formula $C_{B}(\sigma G)$
\end_inset

, a coset represented by a set of generators and a permutation
\end_layout

\begin_layout Algorithm
*
\end_layout

\begin_layout Algorithm
* // base case
\end_layout

\begin_layout Algorithm
if 
\begin_inset Formula $|B|=1$
\end_inset


\end_layout

\begin_deeper
\begin_layout Algorithm
* let 
\begin_inset Formula $b$
\end_inset

 be the only element in 
\begin_inset Formula $B$
\end_inset


\end_layout

\begin_layout Algorithm
if 
\begin_inset Formula $\sigma(b)\sim b$
\end_inset


\end_layout

\begin_deeper
\begin_layout Algorithm
return 
\begin_inset Formula $\sigma G$
\end_inset


\end_layout

\end_deeper
\begin_layout Algorithm
else
\end_layout

\begin_deeper
\begin_layout Algorithm
return 
\begin_inset Formula $\emptyset$
\end_inset


\end_layout

\end_deeper
\begin_layout Algorithm
endif
\end_layout

\end_deeper
\begin_layout Algorithm
endif
\end_layout

\begin_layout Algorithm
*
\end_layout

\begin_layout Algorithm
* // recursive step
\end_layout

\begin_layout Algorithm
if 
\begin_inset Formula $B$
\end_inset

 is a union of 
\begin_inset Formula $G$
\end_inset

-stable subsets 
\begin_inset Formula $B'$
\end_inset

, 
\begin_inset Formula $B''$
\end_inset


\end_layout

\begin_deeper
\begin_layout Algorithm
* // divide an conquer by Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:CB-properties"

\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:CB-properties-composition"

\end_inset

)
\end_layout

\begin_layout Algorithm
* find 
\begin_inset Formula $B',B''$
\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
how can we find these sets? partial result: use thm 
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:compute-g-orbits-poly"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Algorithm
return 
\begin_inset Formula $C_{B}(\sigma G)=C_{B''}(C_{B'}(\sigma G))$
\end_inset


\end_layout

\end_deeper
\begin_layout Algorithm
else
\end_layout

\begin_deeper
\begin_layout Algorithm
* // divide and conquer by Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:trivalent-algo-transitive"

\end_inset


\end_layout

\begin_layout Algorithm
* find 
\begin_inset Formula $G$
\end_inset

-blocks 
\begin_inset Formula $B'$
\end_inset

 and 
\begin_inset Formula $B''$
\end_inset

 such that 
\begin_inset Formula $B=B'\cup B''$
\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
how can we find these blocks?
\end_layout

\end_inset


\end_layout

\begin_layout Algorithm
* find a subgroup 
\begin_inset Formula $H$
\end_inset

 with 
\begin_inset Formula $G=H\cup\tau H$
\end_inset

 that stabilizes 
\begin_inset Formula $B'$
\end_inset

 and 
\begin_inset Formula $B''$
\end_inset


\end_layout

\begin_layout Algorithm
return 
\begin_inset Formula $C_{B}(\sigma G)=C_{B''}(C_{B'}(\sigma H))\cup C_{B''}(C_{B'}(\sigma\tau H))$
\end_inset


\end_layout

\end_deeper
\begin_layout Algorithm
endif
\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "alg:trivalent"

\end_inset

Polynomial-time divide and conquer algorithm for the Color Automorphism
 Problem for 2-groups.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The correctness of the first resursive branch of the algorithm was already
 shown in Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:CB-properties"

\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:CB-properties-composition"

\end_inset

).
 The following lemma proves the correctness of the second branch.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:trivalent-algo-transitive"

\end_inset

If 
\begin_inset Formula $B$
\end_inset

 is not the union of 
\begin_inset Formula $G$
\end_inset

-stable subsets 
\begin_inset Formula $B'$
\end_inset

 and 
\begin_inset Formula $B''$
\end_inset

, then there are 
\begin_inset Formula $G$
\end_inset

-blocks 
\begin_inset Formula $B'$
\end_inset

 and 
\begin_inset Formula $B''$
\end_inset

, a 
\begin_inset Formula $B'$
\end_inset

- and 
\begin_inset Formula $B''$
\end_inset

-stable subgroup 
\begin_inset Formula $H\leq G$
\end_inset

 and a 
\begin_inset Formula $\tau\in\Sym A$
\end_inset

 such that 
\begin_inset Formula $B=B'\cup B''$
\end_inset

 and 
\begin_inset Formula $G=H\cup\tau H$
\end_inset

.
 Furthermore, 
\begin_inset Formula $C_{B}(\sigma G)=C_{B''}(C_{B'}(\sigma H))\cup C_{B''}(C_{B'}(\sigma\tau H))$
\end_inset

.
\end_layout

\begin_layout Proof
TODO
\end_layout

\begin_layout Theorem
\begin_inset Argument
status open

\begin_layout Plain Layout
Correctness of Algorithm 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:trivalent"

\end_inset


\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "thm:trivalent-algo-correct"

\end_inset

Given a colored set 
\begin_inset Formula $A$
\end_inset

 and a 2-subgroup 
\begin_inset Formula $G$
\end_inset

 of 
\begin_inset Formula $\Sym A$
\end_inset

, algorithm 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:trivalent"

\end_inset

 returns a generator for 
\begin_inset Formula $C_{A}(G)$
\end_inset

, which is the biggest color-preserving subgroup of 
\begin_inset Formula $G$
\end_inset

.
\end_layout

\begin_layout Proof
\begin_inset ERT
status open

\begin_layout Plain Layout

\end_layout

\end_inset

TODO
\end_layout

\begin_deeper
\begin_layout Enumerate
Induction using Lemmas 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:CB-properties"

\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:CB-properties-composition"

\end_inset

) and 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:trivalent-algo-transitive"

\end_inset

; base case.
 This yields: Algorithm returns 
\begin_inset Formula $C_{A}(G)$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $C_{A}(G)$
\end_inset

 is the biggest color-preserving subgroup
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:trivalent-algo-correct"

\end_inset


\end_layout

\end_deeper
\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:trivalent-algo-step-runtime"

\end_inset

In algorithm 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:trivalent"

\end_inset

, the runtime for each recursive step is polynomial in 
\begin_inset Formula $n$
\end_inset

.
\end_layout

\begin_layout Proof
TODO case-by-case: transitive and intransitive
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:trivalent-algo-number-of-branches"

\end_inset

Given a colored set 
\begin_inset Formula $A$
\end_inset

 with 
\begin_inset Formula $n$
\end_inset

 elements and a generating set for a 2-subgroup 
\begin_inset Formula $G$
\end_inset

 of 
\begin_inset Formula $\Sym A$
\end_inset

, algorithm 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:trivalent"

\end_inset

 uses less than TODO number of recursive calls.
\end_layout

\begin_layout Proof
TODO
\end_layout

\begin_layout Theorem
\begin_inset Argument
status open

\begin_layout Plain Layout
Runtime of algorithm 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:trivalent"

\end_inset


\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "thm:trivalent-algo-runtime"

\end_inset

Given a colored set 
\begin_inset Formula $A$
\end_inset

 with 
\begin_inset Formula $n$
\end_inset

 elements and a generating set for a 2-subgroup 
\begin_inset Formula $G$
\end_inset

 of 
\begin_inset Formula $\Sym A$
\end_inset

, algorithm 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:trivalent"

\end_inset

 uses polynomial time in 
\begin_inset Formula $n$
\end_inset

 to terminate.
\end_layout

\begin_layout Proof
By Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:trivalent-algo-step-runtime"

\end_inset

, the runtime for each recursive step is polynomial in 
\begin_inset Formula $n$
\end_inset

.
 By 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:trivalent-algo-number-of-branches"

\end_inset

, there are less than TODO recursive calls.
 This yields a polynomial runtime in 
\begin_inset Formula $n$
\end_inset

.
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Proof
\begin_inset Argument
status open

\begin_layout Plain Layout
Proof of Theorem 
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:color-automorphism-2-groups-polynomial-time"

\end_inset


\end_layout

\end_inset

Theorem 
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:trivalent-algo-correct"

\end_inset

 guarantees correctness of algorithm 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:trivalent"

\end_inset

, while Theorem 
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:trivalent-algo-runtime"

\end_inset

 proves polynomial runtime.
 Therefore, we have a polynomial-time algorithm for the Color Automorphism
 Problem for 2-groups.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Conclusion
\end_layout

\begin_layout Standard
General case bounded valence and applications
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
btprint "btPrintAll"
bibfiles "ref"
options "amsalpha"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage clearpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pagestyle{empty}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\lang ngerman
Ich versichere, dass ich die vorliegende Arbeit selbstständig verfasst,
 keine anderen als die angegebenen Quellen und Hilfsmittel benutzt und die
 Arbeit bisher oder gleichzeitig keiner anderen Prüfungsbehörde vorgelegt
 zu haben.
\end_layout

\begin_layout Standard

\lang ngerman
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{4cm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

Berlin, 
\lang ngerman

\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
today
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\end_layout

\end_body
\end_document
